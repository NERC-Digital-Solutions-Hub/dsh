import{s as U}from"./BfhsIlKo.js";import{u as z}from"./aQeO9QTD.js";import{r as v}from"./CplOCcJ4.js";import{f as C,C as O,n as R,_ as A}from"./D4R7oZu3.js";import{j as G}from"./ByvrwUxO.js";import{T as Y,e as _}from"./DJjT3TTZ.js";import{u as D,l as S}from"./BXfupK_G.js";import{$ as V}from"./BYazQef7.js";import{m as E,B as L}from"./KA1W78pU.js";let c=null;const P=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function oe(e,t,n,r){const o=O(n)?R(n):null,s=o?Math.round((o.valid[1]-o.valid[0])/t.scale[0]):null;return e.map((l=>{const a=new A(l.geometry);return G(t,a,a),l.geometry=o?k(a,s??0,r[0]):a,l}))}function ie(e,t=18,n,r,o){const s=new Float64Array(r*o);t=Math.round(z(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const F=D(n);for(const{geometry:p,attributes:N}of e){const{x:g,y:f}=p,w=Math.max(0,g-t),b=Math.max(0,f-t),M=Math.min(o,f+t),x=Math.min(r,g+t),h=+F(N);for(let m=b;m<M;m++)for(let d=w;d<x;d++){const $=m*r+d,I=S(d-g,m-f,t)*h,u=s[$]+=I;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:r,ss:o,ms:s}=t.groups;return Number(n)*v.hours+Number(r)*v.minutes+Number(o)*v.seconds+Number(s||0)}async function se(e,t,n=!0){if(!t)return[];const{field:r,field2:o,field3:s,fieldDelimiter:l,fieldInfos:a,timeZone:F}=e,p=r&&a?.find((u=>u.name.toLowerCase()===r.toLowerCase())),N=!!p&&Y(p),g=!!p&&V(p),f=e.valueExpression,w=e.normalizationType,b=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await _();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new C(h.spatialReference)}):null}const $=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&$?{fields:$}:null;return t.forEach((u=>{const y=u.attributes;let i;if(f){const T=I?{...u,layer:I}:u,j=c.createExecContext(T,d,F);i=c.executeFunction(m,j)}else y&&(i=y[r],o?(i=`${E(i)}${l}${E(y[o])}`,s&&(i=`${i}${l}${E(y[s])}`)):typeof i=="string"&&n&&(g?i=i?new Date(i).getTime():null:N&&(i=i?q(i):null)));if(w&&typeof i=="number"&&isFinite(i)){const T=y&&parseFloat(y[b]);i=L(i,w,T,M)}x.push(i)})),x}function le(e){const t=e.field,n=e.normalizationType,r=e.normalizationField;let o;return n==="field"?o="(NOT "+r+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(o=`(${t} > 0)`),o}function ae(e,t,n){const r=t!=null?e+" >= "+t:"",o=n!=null?e+" <= "+n:"";let s="";return s=r&&o?B(r,o):r||o,s?"("+s+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ue(e,t){if(e&&e.spatialRelationship!=="intersects")return new U(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function fe(e,t,n){const r=Z({layer:e,fields:t});if(r.length)return new U(n,"Unknown fields: "+r.join(", ")+". You can only use fields defined in the layer schema");const o=H({layer:e,fields:t});return o.length?new U(n,"Unsupported fields: "+o.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Z(e){const t=e.layer;return e.fields.filter((n=>!t.getField(n)))}function H(e){const t=e.layer;return e.fields.filter((n=>{const r=t.getFieldUsageInfo(n);return!r||!r.supportsStatistics}))}export{le as F,q as I,ue as M,ae as N,fe as T,B as U,se as b,ie as w,oe as x};
