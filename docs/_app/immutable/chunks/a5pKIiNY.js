import{v as C,bQ as P,r,m as i,_ as H,be as J,bZ as G,a as _,z as Q,C as U}from"./CtNvT6K6.js";import{c as Y,b as Z}from"./CPhJrh_r.js";import{a as k}from"./DvJptieO.js";import{a as x}from"./CUPsNPeP.js";import{g as B}from"./ZGrc7RNF.js";import{l as I}from"./CEQCtcZS.js";import{V as A}from"./BLqUKxv1.js";import{n as K,t as W}from"./BrBJ1DGz.js";import{s as j,r as E}from"./BP-CeWEJ.js";import{l as D,w as L}from"./K7zsZ2sk.js";import"./Bxh34c20.js";import{Y as X}from"./DBnWdnyD.js";import{S as ee}from"./zJBfbJr0.js";import{h as te}from"./BH0Bspy2.js";import{b as re}from"./BhOl2jZS.js";let o=class extends C.JSONSupportMixin(k){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}get valid(){return this.observer!=null&&this.farDistance>0}equals(e){return P(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&Y(this.feature,e.feature)}};r([i({type:H,json:{write:{isRequired:!0}}})],o.prototype,"observer",void 0),r([i({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],o.prototype,"farDistance",void 0),r([i({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),J((e=>x.normalize(G(e),void 0,!0)))],o.prototype,"heading",void 0),r([i({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"tilt",void 0),r([i({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],o.prototype,"horizontalFieldOfView",void 0),r([i({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"verticalFieldOfView",void 0),r([i(Z)],o.prototype,"feature",void 0),r([i({readOnly:!0,json:{read:!1}})],o.prototype,"valid",null),o=r([_("esri.analysis.Viewshed")],o);const N=A.ofType(o);let l=class extends I{constructor(t){super(t),this.type="viewshed",this._extent=null}initialize(){this.addHandles(D((()=>this._computeExtent()),(t=>{t.pending==null&&(this._extent=t.extent)}),L))}get viewsheds(){return this._get("viewsheds")||new N}set viewsheds(t){this._set("viewsheds",K(t,this.viewsheds,N))}get spatialReference(){for(const t of this.viewsheds)if(t.observer!=null)return t.observer.spatialReference;return null}get extent(){return this._extent}get valid(){return this.viewsheds.every((t=>t.valid))}async waitComputeExtent(){const t=this._computeExtent();t.pending!=null&&await t.pending}_computeExtent(){const{spatialReference:t}=this;if(t==null)return{pending:null,extent:null};const u=this.viewsheds.filter((s=>s.observer!=null)),d=u.map((s=>s.observer)).toArray(),p=X(d,t);return p.pending!=null?{pending:p.pending,extent:null}:{pending:null,extent:p.geometries.map(((s,h)=>{const b=u.at(h);return s!=null&&b!=null?this._computeViewshedExtent(this.viewsheds.at(h),s):null})).filter((s=>s!=null)).reduce(((s,h)=>ie(s,h)),null)}}_computeViewshedExtent(t,u){const{farDistance:d,heading:p,tilt:s,horizontalFieldOfView:h,verticalFieldOfView:b}=t,{spatialReference:q}=u,O=h/2,V=b/2,$=d/q.metersPerUnit,S=[x.normalize(p-O),p,x.normalize(p+O)],c=Q.fromPoint(u),v=w=>{const y=S.map((a=>x.normalize(a-w)));if(y[0]>y[2]||h===360)return $;const m=y.map((a=>Math.abs(a>180?360-a:a))).reduce(((a,g)=>a>g?g:a));return m>90?0:$*Math.cos(j(m))};c.xmax+=v(90),c.xmin-=v(-90),c.ymax+=v(0),c.ymin-=v(180);const f=u.z;if(f!=null){let w=f,y=f;const m=s-90,a=E(m+V,-90,90),g=E(m-V,-90,90),z=q?.isGeographic?d:$;w+=z*R(a),y+=z*R(g);const T=M(V)*z,F=R(m)*T*(1-M(O));s<90&&(w-=F),s>90&&(y-=F),c.zmax=Math.max(w,f),c.zmin=Math.min(y,f)}return c}equals(t){return this===t||super.equals(t)&&B(this.viewsheds.toArray(),t.viewsheds.toArray(),((u,d)=>u.equals(d)))}clear(){this.viewsheds.removeAll()}};function ie(e,t){return e==null?t:t==null?e:e.union(t)}function M(e){return Math.cos(j(e))}function R(e){return Math.sin(j(e))}r([i({type:["viewshed"]})],l.prototype,"type",void 0),r([i({cast:W,type:N,nonNullable:!0})],l.prototype,"viewsheds",null),r([i({readOnly:!0})],l.prototype,"spatialReference",null),r([i()],l.prototype,"_extent",void 0),r([i()],l.prototype,"extent",null),r([i({readOnly:!0})],l.prototype,"valid",null),l=r([_("esri.analysis.ViewshedAnalysis")],l);let n=class extends re(ee(te)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new l,this.opacity=1}initialize(){this.addHandles(D((()=>this.source),((e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)}),L))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new l)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,u,d){t.viewsheds=e.filter((p=>p.valid)).toJSON(d)}};r([i({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),r([i({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),r([i({type:l,nonNullable:!0})],n.prototype,"source",void 0),r([i({readOnly:!0})],n.prototype,"spatialReference",null),r([i({readOnly:!0})],n.prototype,"fullExtent",null),r([i({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),r([i({type:["show","hide"]})],n.prototype,"listMode",void 0),r([i({type:A.ofType(o),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),r([U("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=r([_("esri.layers.ViewshedLayer")],n);const xe=n;export{xe as default};
