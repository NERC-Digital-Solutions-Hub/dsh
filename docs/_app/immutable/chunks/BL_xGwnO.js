import{k as p,s as l,r as c,a as f}from"./DtUpcSZL.js";import{V as m}from"./BPWMfk3L.js";import"./BfhsIlKo.js";import"./DHq0rblm.js";import{P as n}from"./1paoQEYR.js";import{L as u,s as S}from"./CJDxRR2q.js";var o;let i=o=class extends p.JSONSupportMixin(m.ofType(n)){constructor(e){super(e)}clone(){return new o(this.items.map((e=>e.clone())))}write(e,r){return this.toJSON(r)}toJSON(e){const r=e?.layer?.spatialReference;return r?this.toArray().map((t=>{if(!r.equals(t.spatialReference)){if(!u(t.spatialReference,r))return e?.messages?.push(new l("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const a=new n;S(t,a,r),t=a}const s=t.toJSON(e);return delete s.spatialReference,s})).filter((t=>t!=null)):this.toArray().map((t=>t.toJSON(e)))}static fromJSON(e,r){const t=new o;return e.forEach((s=>t.add(n.fromJSON(s,r)))),t}};i=o=c([f("esri.layers.support.PolygonCollection")],i);const w=i;export{w as l};
