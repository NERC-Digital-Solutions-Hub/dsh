const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CZ2-Q0VM.js","./DWaPUN1f.js","./BiQf5hs2.js","./BJ4A_YA8.js","./CSRfKCc0.js","./CgU_ym0P.js","./BVDW66ai.js","./LRt7UCu2.js","./DNjNQZBc.js","./Dfd7IDD1.js","./B75-hNGV.js","./BWmvk4xz.js","./BMAYWEQT.js","./BxTDtSv-.js","./C5CzMsLd.js","./BtHDhpcr.js","./DjVbDjhv.js","./D6wORzA5.js","./aQeO9QTD.js","./Djp3mnm5.js","./r7bTfpSU.js","./DQOJ18NT.js","./DiS5amIe.js","./CUfpg4HP.js","./FCJta8Z1.js","./vySXJZvZ.js","./NcXBpqzB.js","./CeBiZl06.js","./B62gTqcS.js","./V0LsEF1Y.js","./Tq-Y6--1.js","./DV1Vh3RR.js","./BNTYdiZo.js","./CxPSIPxI.js","./BMeqdOz1.js","./D_oey4PV.js","./CyPwWS-I.js","./CLRB06vK.js","./CL2NbQte.js","./WHz1Vmwb.js","./DFT5zUWi.js"])))=>i.map(i=>d[i]);
import{_ as L}from"./DWaPUN1f.js";import{s as m,I as P,q as g}from"./CgU_ym0P.js";import{M as U,aS as O}from"./BJ4A_YA8.js";import{s as T}from"./BNTYdiZo.js";import{t as f,l as d,n as $}from"./DV1Vh3RR.js";import{z as I,h as v}from"./LRt7UCu2.js";import{a as C}from"./CxPSIPxI.js";const _={FeatureLayer:!0,SceneLayer:!0,VideoLayer:!0};async function H(e){const{properties:a,url:r}=e,s={...a,url:r},l=await V(r,a?.customParameters),{Constructor:t,layerId:u,sourceJSON:i,parsedUrl:p,layers:o,tables:n}=l;if(o.length+n.length===0)return u!=null&&(s.layerId=u),i!=null&&(s.sourceJSON=i),new t(s);const c=new(await L(async()=>{const{default:y}=await import("./CZ2-Q0VM.js");return{default:y}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]),import.meta.url)).default({title:p.title});return await F(c,l,s),c}function S(e,a){return e?e.find((({id:r})=>r===a)):null}function h(e,a,r,s,l){const t={...l,layerId:a};return e!=null&&(t.url=e),r!=null&&(t.sourceJSON=r),"sublayerTitleMode"in s.prototype&&(t.sublayerTitleMode="service-name"),new s(t)}async function F(e,a,r){const s=a.sublayerConstructorProvider;for(const{id:l,serverUrl:t}of a.layers){const u=S(a.sublayerInfos,l),i=h(t,l,u,(u&&s?.(u))??a.Constructor,r);e.add(i)}if(a.tables.length){const l=await w("FeatureLayer");a.tables.forEach((({id:t,serverUrl:u})=>{const i=h(u,t,S(a.tableInfos,t),l,r);e.tables.add(i)}))}}async function V(e,a){let r=U(e);if(r==null&&(r=await N(e,a)),r==null)throw new m("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:s,sublayer:l}=r;let t;const u={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},i=s==="FeatureServer",p=s==="SceneServer",o={parsedUrl:r,Constructor:null,layerId:i||p?l??void 0:void 0,layers:[],tables:[]};switch(s){case"MapServer":if(l!=null){const{type:n}=await f(e,{customParameters:a});switch(t="FeatureLayer",n){case"Catalog Layer":t="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new m("arcgis-layers:unsupported",`fromUrl() not supported for "${n}" layers`)}}else t=await M(e,a)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const n=await f(e,{customParameters:a}),{tileInfo:c,cacheType:y}=n;t=c?c?.format?.toUpperCase()!=="LERC"||y&&y.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const n=await f(r.url.path,{customParameters:a});if(t="SceneLayer",n){const c=n?.layers;if(n?.layerType==="Voxel")t="VoxelLayer";else if(c?.length){const y=c[0]?.layerType;y!=null&&v[y]!=null&&(t=v[y])}}break}case"3DTilesServer":throw new m("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(t="FeatureLayer",l!=null){const n=await f(e,{customParameters:a});o.sourceJSON=n,o.preferredUrl=I(),t=d(n.type)}break;default:t=u[s]}if(_[t]&&l==null){const n=await J(e,s,a);if(i&&(o.preferredUrl=n.preferredUrl,o.sublayerInfos=n.layerInfos,o.tableInfos=n.tableInfos),n.layers.length+n.tables.length!==1)o.layers=n.layers,o.tables=n.tables,i&&n.layerInfos?.length&&(o.sublayerConstructorProvider=await x(n.layerInfos));else if(i||p){const c=n.layerInfos?.[0]??n.tableInfos?.[0];if(o.layerId=n.layers[0]?.id??n.tables[0]?.id,o.sourceJSON=c,i){const y=c?.type;t=d(y)}}}return o.Constructor=await w(t),o}async function N(e,a){const r=await f(e,{customParameters:a});let s=null,l=null;const t=r.type;if(t==="Feature Layer"||t==="Table"?(s="FeatureServer",l=r.id??null):t==="indexedVector"?s="VectorTileServer":r.hasOwnProperty("mapName")?s="MapServer":r.hasOwnProperty("bandCount")&&r.hasOwnProperty("pixelSizeX")?s="ImageServer":r.hasOwnProperty("maxRecordCount")&&r.hasOwnProperty("allowGeometryUpdates")?s="FeatureServer":r.hasOwnProperty("streamUrls")?s="StreamServer":b(r)?(s="SceneServer",l=r.id):r.hasOwnProperty("layers")&&b(r.layers?.[0])&&(s="SceneServer"),!s)return null;const u=l!=null?O(e):null;return{title:u!=null&&r.name||g(e),serverType:s,sublayer:l,url:{path:u!=null?u.serviceUrl:P(e).path}}}function b(e){return e!=null&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&typeof e.id=="number"}async function J(e,a,r){let s,l,t,u=!1;switch(a){case"FeatureServer":{const o=await $(e,{customParameters:r});t=I(e,{preferredHost:o.preferredHost}),u=!!o.layersJSON,s=o.layersJSON||o.serviceJSON;break}case"SceneServer":{const o=await k(e,r);s=o.serviceInfo,l=o.tableServerUrl;break}default:s=await f(e,{customParameters:r})}const i=s?.layers,p=s?.tables;return{preferredUrl:t,layers:i?.map((o=>({id:o.id}))).reverse()||[],tables:p?.map((o=>({serverUrl:l,id:o.id}))).reverse()||[],layerInfos:u?i:[],tableInfos:u?p:[]}}async function k(e,a){const r=await f(e,{customParameters:a});if(!r.layers?.[0])return{serviceInfo:r};try{const{serverUrl:l}=await T(e),t=await f(l,{customParameters:a}).catch((()=>null));return t&&(r.tables=t.tables),{serviceInfo:r,tableServerUrl:l}}catch{return{serviceInfo:r}}}async function w(e){return(0,C[e])()}async function M(e,a){return(await f(e,{customParameters:a})).tileInfo}async function x(e){if(!e.length)return;const a=new Set,r=[];for(const{type:t}of e)a.has(t)||(a.add(t),r.push(w(d(t))));const s=await Promise.all(r),l=new Map;return Array.from(a).forEach(((t,u)=>{l.set(t,s[u])})),t=>l.get(t.type)}export{H as fromUrl};
