import{aa as x,r as y,a as L}from"./-Rap9rN9.js";import{q as b,p as _,u as m}from"./BctYr78K.js";import{n as u,x as h}from"./Buev1GnW.js";import{v as P,h as S,j as $}from"./C3eTmIbV.js";import{E as I,U as l,i as E}from"./BFiL_LH5.js";import{b as w}from"./DRn4_aVr.js";import{g as V}from"./BS9jxOP5.js";const j=1e3;function T(t,n,e){const s=I(),o=l(s);return b(o,o,t,.5),b(o,o,n,.5),s[3]=_(o,t),m(o,o,e),s}let g=class{constructor(){this._idToComponent=new Map,this._components=new w((t=>t.bounds)),this._edges=new w((t=>t.bounds)),this._tmpLineSegment=P(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),x(n),await this._ensureEdgeLocations(t,n);const e=[];return this._edges.forEachNeighbor((s=>(this._addCandidates(t,s,e),e.length<j)),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,n){const e=[];if(this._components.forEachNeighbor((i=>{if(i.info==null){const{id:c,uid:d}=i;e.push({id:c,uid:d})}return!0}),t.bounds),!e.length)return;const s={components:e},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,n??{});for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const n=new f(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const e=[];this._edges.forEachNeighbor((s=>(s.component===n&&e.push(s),!0)),n.bounds),this._edges.remove(e),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(n==null||t.uid!==n.uid)return;const e=V.createView(t.locations),s=new Array(e.count),o=u(),i=u();for(let r=0;r<e.count;r++){e.position0.getVec(r,o),e.position1.getVec(r,i);const a=T(o,i,t.origin),v=new N(n,r,a);s[r]=v}this._edges.add(s);const{objectIds:c,origin:d}=t;n.info={locations:e,objectIds:c,origin:d}}_addCandidates(t,n,e){const{info:s}=n.component,{origin:o,objectIds:i}=s,c=s.locations,d=c.position0.getVec(n.index,this._tmpP1),r=c.position1.getVec(n.index,this._tmpP2);m(d,d,o),m(r,r,o);const a=i[c.componentIndex.get(n.index)];this._addEdgeCandidate(t,a,d,r,e),C(t,a,d,e),C(t,a,r,e)}_addEdgeCandidate(t,n,e,s,o){if(!t.returnEdge)return;const i=l(t.bounds),c=S(e,s,this._tmpLineSegment),d=$(c,i,this._tmpP3);E(t.bounds,d)&&o.push({type:"edge",objectId:n,target:h(d),distance:_(i,d),start:h(e),end:h(s)})}};g=y([L("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const z=g;function C(t,n,e,s){if(!t.returnVertex||!E(t.bounds,e))return;const o=l(t.bounds);s.push({type:"vertex",objectId:n,target:h(e),distance:_(o,e)})}const p=class p{constructor(n,e){this.id=n,this.bounds=e,this.info=null,this.uid=++p.uid}};p.uid=0;let f=p;class N{constructor(n,e,s){this.component=n,this.index=e,this.bounds=s}}export{z as default};
