import{H as N}from"./Bwh84WyQ.js";import"./DHq0rblm.js";import"./BfhsIlKo.js";import"./5FB5fp0p.js";import"./q_b6UJoq.js";import"./B55yQsaB.js";import{u as m}from"./1paoQEYR.js";import"./CJDxRR2q.js";import"./CVUgdQRC.js";import"./ujisRSNu.js";import"./CFcsbxo9.js";import"./CQ7_HgKN.js";import{D as C,C as D}from"./Dv8W1kB_.js";import"./D6KPPgz5.js";import{g as _}from"./BkHFJjG4.js";import"./C4fyX7k8.js";import{I as R}from"./DGTK_AoY.js";m();var E;async function j(o,e,f,I,u,S,T,c){const i=[];for(const t of e)if(t&&u.includes(t.name)){const r=`${o}/nodes/${f}/attributes/${t.key}/0`;i.push({url:r,storageInfo:t})}const a=await Promise.allSettled(i.map((t=>N(t.url,{responseType:"array-buffer",query:{...T,token:S},signal:c?.signal}).then((r=>C(t.storageInfo,r.data)))))),s=[];for(const t of I){const r={};for(let n=0;n<a.length;n++){const p=a[n];if(p.status==="fulfilled"){const l=p.value;r[i[n].storageInfo.name]=D(l,t)}}s.push(r)}return s}(function(o){o[o.OUTSIDE=0]="OUTSIDE",o[o.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",o[o.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",o[o.INSIDE=3]="INSIDE"})(E||(E={}));_({color:[0,0,0,0],opacity:0});m();m();new R;new Array(72);export{j as B};
