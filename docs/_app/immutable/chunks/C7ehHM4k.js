import{a as i,m,b as M,R as S,T as F,I as $,z as C}from"./DX5R6uCF.js";import{s as x,a as R}from"./K0pwTKFC.js";import{l as q}from"./zQYKJ5V3.js";import"./C6k8CR_f.js";import{r as E}from"./F-uoEStm.js";import{S as U,u as V}from"./DQ2YQXOa.js";import{M as L}from"./DyW-il1j.js";import{i as W}from"./BJmtJdEo.js";import{a as z}from"./Rd6VPh1k.js";import{i as A}from"./B_sY3EP6.js";const H=e=>{let t=class extends e{initialize(){this.exportImageParameters=new z({layer:this.layer})}destroy(){this.exportImageParameters=S(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return A(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(a,s){const{layer:o}=this;if(!a)throw new x("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:o});const{popupEnabled:d}=o;if(!d)throw new x("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:d});const r=this.createFetchPopupFeaturesQuery(a);if(!r)return[];const{extent:n,width:h,height:p,x:c,y:l}=r;if(!(n&&h&&p))throw new x("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:n,width:h,height:p});const g=await o.fetchFeatureInfo(n,h,p,c,l);return F(s),g}};return i([m()],t.prototype,"exportImageParameters",void 0),i([m({readOnly:!0})],t.prototype,"exportImageVersion",null),i([m()],t.prototype,"layer",void 0),i([m({readOnly:!0})],t.prototype,"timeExtent",null),t=i([M("esri.views.layers.WMSLayerView")],t),t};let u=class extends H(W(U(V))){constructor(){super(...arguments),this.bitmapContainer=new E}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((t=>{$(t)||R.getLogger(this).error(t)}))}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:a}=e;this.bitmapContainer=new E,this.container.addChild(this.bitmapContainer),this.strategy=new L({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:a,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(q((()=>this.exportImageVersion),(()=>this.requestUpdate())))}detach(){this.strategy=S(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:a}=this,{x:s,y:o}=e,{spatialReference:d}=t;let r,n=0,h=0;if(a.children.some((g=>{const{width:w,height:v,resolution:I,x:y,y:f}=g,b=y+I*w,P=f-I*v;return s>=y&&s<=b&&o<=f&&o>=P&&(r=new C({xmin:y,ymin:P,xmax:b,ymax:f,spatialReference:d}),n=w,h=v,!0)})),!r)return null;const p=r.width/n,c=Math.round((s-r.xmin)/p),l=Math.round((r.ymax-o)/p);return{extent:r,width:n,height:h,x:c,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,a,s){return this.layer.fetchImageBitmap(e,t,a,{timeExtent:this.timeExtent,...s})}};i([m()],u.prototype,"strategy",void 0),i([m()],u.prototype,"updating",void 0),u=i([M("esri.views.2d.layers.WMSLayerView2D")],u);const J=u;export{J as default};
