const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./d_gXlTMW.js","./DckaW9b_.js","./CKPuaBYR.js","./w-2V2ENZ.js","./DGjcIG0n.js","./CInk37WK.js","./D9Z9MdNV.js","./BBGELVfD.js","./BvgbCAFv.js","./D6KPPgz5.js","./CNijnAeP.js","./D8t6YHTB.js","./DZd6gJy7.js"])))=>i.map(i=>d[i]);
import{_ as d}from"./D9Z9MdNV.js";import{aq as _,d as g,s as c,r as s,m as l,o as y,a as w}from"./CKPuaBYR.js";import{H as m}from"./CInk37WK.js";import{s as V}from"./DGjcIG0n.js";import{S as T}from"./DcTGm81B.js";import{v as b}from"./BBGELVfD.js";import"./w-2V2ENZ.js";import{m as S}from"./Jv64hfd5.js";import{h as D}from"./WkIQChO6.js";import{p as $}from"./B50ldF0F.js";import{l as x}from"./DAJsxU5z.js";import{b as I,y as E}from"./D-pA6xvz.js";import{j as L}from"./COrOErwf.js";import{h as O}from"./CiMB2JRg.js";class N{constructor(e,t,i,o){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=i,this.noDataValue=o)}get hasNoDataValues(){if(this._hasNoDataValues==null){const e=this.noDataValue;this._hasNoDataValues=this.values.includes(e)}return this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}get cachedMemory(){return this.values.byteLength+256}_ensureBounds(){if(this._minValue!=null)return;const{noDataValue:e,values:t}=this;let i=1/0,o=-1/0,u=!0;for(const n of t)n===e?this._hasNoDataValues=!0:(i=n<i?n:i,o=n>o?n:o,u=!1);u?(this._minValue=0,this._maxValue=0):(this._minValue=i,this._maxValue=o>-3e38?o:0)}}class f extends O{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(p.forEach(((e,t)=>{e===this&&p.delete(t)})),this.destroy())}}const p=new Map;function j(r=null){let e=p.get(r);return e||(r!=null?(e=new f((t=>r.immediate.schedule(t))),p.set(r,e)):(e=new f,p.set(null,e))),++e.ref,e}let a=class extends $(x(I(L(T(D))))){constructor(...r){super(...r),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=j()}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}destroy(){this._lercDecoder=_(this._lercDecoder)}readCapabilities(r,e){const t=e.capabilities&&e.capabilities.split(",").map((i=>i.toLowerCase().trim()));return t?{operations:{supportsTileMap:t.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(r,e){let t=e.currentVersion;return t||(t=9.3),t}load(r){const e=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{if(t.typeKeywords){for(let i=0;i<t.typeKeywords.length;i++)if(t.typeKeywords[i].toLowerCase()==="elevation 3d layer")return!0}throw new V("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(g).then((()=>this._fetchImageService(e)))),Promise.resolve(this)}fetchTile(r,e,t,i){const o=i?.signal,u={responseType:"array-buffer",signal:o},n={noDataValue:i?.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(r,e,t,i))).then((()=>m(this.getTileUrl(r,e,t),u))).then((h=>this._lercDecoder.decode(h.data,n,o))).then((h=>new N(h)))}getTileUrl(r,e,t){const i=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,o=b({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${r}/${e}/${t}${o?"?"+o:""}`}async queryElevation(r,e){const{ElevationQuery:t}=await d(()=>import("./d_gXlTMW.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url);return c(e),new t().query(this,r,e)}async createElevationSampler(r,e){const{ElevationQuery:t}=await d(()=>import("./d_gXlTMW.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url);return c(e),new t().createSampler(this,r,e)}_fetchTileAvailability(r,e,t,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,e,t,i):Promise.resolve("unknown")}async _fetchImageService(r){if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:r},t=await m(this.parsedUrl.path,e);t.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile[v]}};s([l({readOnly:!0})],a.prototype,"capabilities",void 0),s([y("service","capabilities",["capabilities"])],a.prototype,"readCapabilities",null),s([l({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),s([l({readOnly:!0,type:S})],a.prototype,"heightModelInfo",void 0),s([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([l({type:["show","hide"]})],a.prototype,"listMode",void 0),s([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),s([l({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),s([l({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),s([l({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),s([l()],a.prototype,"sourceJSON",void 0),s([l({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),s([l(E)],a.prototype,"url",void 0),s([l()],a.prototype,"version",void 0),s([y("version",["currentVersion"])],a.prototype,"readVersion",null),a=s([w("esri.layers.ElevationLayer")],a);const v=Symbol("default-fetch-tile");a.prototype.fetchTile[v]=!0;const z=a;export{z as default};
