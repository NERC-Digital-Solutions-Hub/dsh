import{k as C,v,r as t,m as o,p as O,a as h,o as k}from"./iFuBOtDF.js";import{l as m}from"./gRIb6kZn.js";import{a as L}from"./DHq0rblm.js";import"./BfhsIlKo.js";import{r as c}from"./Bvto7RYj.js";import{o as b}from"./aQeO9QTD.js";const F=new v({esriSMS:"simple-marker",esriPMS:"picture-marker",esriSLS:"simple-line",esriSFS:"simple-fill",esriPFS:"picture-fill",esriTS:"text",esriSHD:"shield-label-symbol",PointSymbol3D:"point-3d",LineSymbol3D:"line-3d",PolygonSymbol3D:"polygon-3d",WebStyleSymbol:"web-style",MeshSymbol3D:"mesh-3d",LabelSymbol3D:"label-3d",CIMSymbolReference:"cim"});let x=0,y=class extends C{constructor(r){super(r),this.id="sym"+x++,this.type=null,this.color=new m([0,0,0,1])}readColor(r){return r?.[0]!=null?[r[0],r[1],r[2],r[3]/255]:r}async collectRequiredFields(r,i){}hash(){return JSON.stringify(this.toJSON())}clone(){}};t([o({type:F.apiValues,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,writer:F.write,isRequired:!0}}})],y.prototype,"type",void 0),t([o({type:m,json:{write:{allowNull:!0}}})],y.prototype,"color",void 0),t([O("color")],y.prototype,"readColor",null),y=t([h("esri.symbols.Symbol")],y);const H=["begin","end","begin-end"],M=["arrow","circle","square","diamond","cross","x"];let d=class extends y{constructor(r){super(r),this.type="simple-line",this.width=.75}hash(){return`${this.type}.${this.width}`}};t([c({esriSLS:"simple-line"},{readOnly:!0})],d.prototype,"type",void 0),t([o({type:Number,cast:b,json:{write:!0}})],d.prototype,"width",void 0),d=t([h("esri.symbols.LineSymbol")],d);var g;let l=g=class extends C{constructor(e){super(e),this.placement="begin-end",this.type="line-marker",this.style="arrow"}writeStyle(e,r,i,s){r[i]=s?.origin==="web-map"?"arrow":e}set color(e){this._set("color",e)}readColor(e){return e?.[0]!=null?[e[0],e[1],e[2],e[3]/255]:e}writeColor(e,r,i,s){s?.origin==="web-map"||(r[i]=e)}clone(){return new g({color:L(this.color),placement:this.placement,style:this.style})}hash(){return`${this.placement}.${this.color?.hash()}.${this.style}`}};t([o({type:["begin","end","begin-end"],json:{write:!0}})],l.prototype,"placement",void 0),t([c({"line-marker":"line-marker"},{readOnly:!0}),o({json:{origins:{"web-map":{write:!1}}}})],l.prototype,"type",void 0),t([o({type:M})],l.prototype,"style",void 0),t([k("style")],l.prototype,"writeStyle",null),t([o({type:m,value:null,json:{write:{allowNull:!0}}})],l.prototype,"color",null),t([O("color")],l.prototype,"readColor",null),t([k("color")],l.prototype,"writeColor",null),l=g=t([h("esri.symbols.LineSymbolMarker")],l);const N=l;var $;const S=new v({esriSLSSolid:"solid",esriSLSDash:"dash",esriSLSDot:"dot",esriSLSDashDot:"dash-dot",esriSLSDashDotDot:"long-dash-dot-dot",esriSLSNull:"none",esriSLSShortDash:"short-dash",esriSLSShortDot:"short-dot",esriSLSShortDashDot:"short-dash-dot",esriSLSShortDashDotDot:"short-dash-dot-dot",esriSLSLongDash:"long-dash",esriSLSLongDashDot:"long-dash-dot"});let n=$=class extends d{constructor(...e){super(...e),this.type="simple-line",this.style="solid",this.cap="round",this.join="round",this.marker=null,this.miterLimit=2}normalizeCtorArgs(e,r,i,s,D,j){if(e&&typeof e!="string")return e;const a={};return e!=null&&(a.style=e),r!=null&&(a.color=r),i!=null&&(a.width=b(i)),s!=null&&(a.cap=s),D!=null&&(a.join=D),j!=null&&(a.miterLimit=b(j)),a}clone(){return new $({color:L(this.color),style:this.style,width:this.width,cap:this.cap,join:this.join,miterLimit:this.miterLimit,marker:this.marker?.clone()})}hash(){return`${super.hash()}.${this.color?.hash()}.${this.style}.${this.cap}.${this.join}.${this.miterLimit}.${this.marker?.hash()}`}};t([c({esriSLS:"simple-line"},{readOnly:!0})],n.prototype,"type",void 0),t([o({type:S.apiValues,json:{read:S.read,write:S.write}})],n.prototype,"style",void 0),t([o({type:["butt","round","square"],json:{write:{overridePolicy:(e,r,i)=>({enabled:e!=="round"&&i?.origin==null})}}})],n.prototype,"cap",void 0),t([o({type:["miter","round","bevel"],json:{write:{overridePolicy:(e,r,i)=>({enabled:e!=="round"&&i?.origin==null})}}})],n.prototype,"join",void 0),t([o({types:{key:"type",base:null,defaultKeyValue:"line-marker",typeMap:{"line-marker":N}},json:{write:!0,origins:{"web-scene":{write:!1}}}})],n.prototype,"marker",void 0),t([o({type:Number,json:{read:!1,write:!1}})],n.prototype,"miterLimit",void 0),n=$=t([h("esri.symbols.SimpleLineSymbol")],n);let u=class extends y{constructor(e){super(e),this.outline=null,this.type=null}hash(){return`${this.type}.${this.outline?.hash()}`}};t([o({types:{key:"type",base:null,defaultKeyValue:"simple-line",typeMap:{"simple-line":n}},json:{default:null,write:!0}})],u.prototype,"outline",void 0),t([o({type:["simple-fill","picture-fill"],readOnly:!0})],u.prototype,"type",void 0),u=t([h("esri.symbols.FillSymbol")],u);var f;const w=new v({esriSFSSolid:"solid",esriSFSNull:"none",esriSFSHorizontal:"horizontal",esriSFSVertical:"vertical",esriSFSForwardDiagonal:"forward-diagonal",esriSFSBackwardDiagonal:"backward-diagonal",esriSFSCross:"cross",esriSFSDiagonalCross:"diagonal-cross"});let p=f=class extends u{constructor(...e){super(...e),this.color=new m([0,0,0,.25]),this.outline=new n,this.type="simple-fill",this.style="solid"}normalizeCtorArgs(e,r,i){if(e&&typeof e!="string")return e;const s={};return e&&(s.style=e),r&&(s.outline=r),i&&(s.color=i),s}clone(){return new f({color:L(this.color),outline:this.outline&&this.outline.clone(),style:this.style})}hash(){return`${super.hash()}${this.style}.${this.color&&this.color.hash()}`}};t([o()],p.prototype,"color",void 0),t([o()],p.prototype,"outline",void 0),t([c({esriSFS:"simple-fill"},{readOnly:!0})],p.prototype,"type",void 0),t([o({type:w.apiValues,json:{read:w.read,write:w.write}})],p.prototype,"style",void 0),p=f=t([h("esri.symbols.SimpleFillSymbol")],p);const K=Object.freeze(Object.defineProperty({__proto__:null,get default(){return p}},Symbol.toStringTag,{value:"Module"}));export{K as S,p as a,y as c,H as e,u as l,n as m,M as n};
