import{s as h}from"./CgU_ym0P.js";import{s as v}from"./B5li2c-i.js";import{l as I}from"./DZBUrCAq.js";import{s as p,c as d,l as M,n as g,i as T,y as C,e as $}from"./wVgGi60R.js";import{h as m,H as w,A as G}from"./DtlFgwmP.js";import{a as P}from"./DONubSqV.js";import{O as N}from"./Bqd_gqra.js";import{s as y}from"./dJfDpDm2.js";async function ue(e){let{portalItem:a}=e;!a||a instanceof N||(a=new N(a));const r=await b(a);return new r.constructor({portalItem:a,...r.properties})}async function b(e){await e.load();const a=new $;return j(await V(e,a))}async function V(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?E():U();case"CSV":return H();case"Feature Collection":return O(e);case"Feature Service":return K(e,a);case"Feed":return Y();case"GeoJson":return A();case"Group Layer":return Z();case"Image Service":return D(e,a);case"KML":return R();case"Knowledge Graph Layer":return q();case"Map Service":return F(e,a);case"Media Layer":return _();case"Scene Service":return W(e,a);case"Stream Service":return k();case"Video Service":return J(e,a);case"Vector Tile Service":return x();case"WCS":return z();case"WFS":return B();case"WMS":return Q();case"WMTS":return X();default:throw new h("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function j(e){const a=e.className,r=P[a];return{constructor:await r(),properties:e.properties}}async function F(e,a){return await ee(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function K(e,a){const r=await L(e,a);if(typeof r=="object"){const{sourceJSON:t,className:s}=r,c={sourceJSON:t};return r.id!=null&&(c.layerId=r.id),{className:s||"FeatureLayer",properties:c}}return{className:"GroupLayer"}}async function W(e,a){const r=await L(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:t}=await v(e.url,{sceneLayerItem:e});return(await a.fetchServiceMetadata(t))?.tables??[]}catch{return[]}}));if(typeof r=="object"){const t={};let s;if(r.id!=null?(t.layerId=r.id,s=`${e.url}/layers/${r.id}`):s=e.url,e.typeKeywords?.length){for(const n of Object.keys(m))if(e.typeKeywords.includes(n))return{className:m[n]}}const c=await a.fetchServiceMetadata(s,{customParameters:await a.fetchCustomParameters(e,(n=>p(n)?.customParameters))});return{className:m[c?.layerType]||"SceneLayer",properties:t}}return r===!1&&(await a.fetchServiceMetadata(e.url))?.layerType==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function O(e){await e.load();const a=y(e,"Map Notes"),r=y(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(y(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return d(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function D(e,a){await e.load();const r=e.typeKeywords?.map((o=>o.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),s=t?.layerType;if(s==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(s==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const c=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),n=c.cacheType?.toLowerCase(),l=c.capabilities?.toLowerCase().includes("tilesonly"),i=c.tileInfo?.format?.toLowerCase()??"",u=n==null&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(i);return n==="map"||u||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function k(){return{className:"StreamLayer"}}async function J(e,a){return typeof await L(e,a)=="object"?{className:"VideoLayer"}:{className:"GroupLayer"}}function x(){return{className:"VectorTileLayer"}}function A(){return{className:"GeoJSONLayer"}}function U(){return{className:"IntegratedMesh3DTilesLayer"}}function E(){return{className:"UnsupportedLayer"}}function H(){return{className:"CSVLayer"}}function R(){return{className:"KMLLayer"}}function q(){return{className:"KnowledgeGraphLayer"}}function z(){return{className:"WCSLayer"}}function B(){return{className:"WFSLayer"}}function Q(){return{className:"WMSLayer"}}function X(){return{className:"WMTSLayer"}}function Y(){return{className:"StreamLayer"}}function Z(){return{className:"GroupLayer"}}function _(){return{className:"MediaLayer"}}async function ee(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}async function L(e,a,r){const{url:t,type:s}=e,c=s==="Feature Service";if(!t)return{};if(/\/\d+$/.test(t)){if(c){const i=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,(u=>p(u)?.customParameters))});return w(e,G()),{id:i.id,className:I(i.type),sourceJSON:i}}return{}}if(s==="Video Service")return!(((await a.fetchServiceMetadata(t)).layers?.length??0)>1)&&{};await e.load();let n=await a.fetchItemData(e);if(c){const{data:i,preferredHost:u}=await M(n,t,a);w(e,u);const o=f(i);if(typeof o=="object"){const S=g(i,o.id);o.className=T(S?.layerType)}return o}if(s==="Scene Service"&&(n=await C(e,n,a)),d(n)>0)return f(n);const l=await a.fetchServiceMetadata(t);return r&&(l.tables=await r()),f(l)}function f(e){return d(e)===1&&{id:p(e)?.id}}export{ue as fromItem,V as selectLayerClassPath};
