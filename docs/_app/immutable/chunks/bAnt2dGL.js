import{aa as n,f as h,H as d}from"./D4R7oZu3.js";import{k as S,r as s,m as a,a as g,P as y}from"./iFuBOtDF.js";import{v as m}from"./COwzl_RY.js";import{f as R,s as w}from"./Db-WH96Y.js";import{o as v}from"./CkRwMJ5O.js";import"./DHq0rblm.js";import"./BfhsIlKo.js";let o=class extends S{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((i=>i.toJSON())),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:m(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([a()],o.prototype,"geometries",void 0),s([a({type:h,json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([a()],o.prototype,"transformation",void 0),s([a()],o.prototype,"transformForward",void 0),o=s([g("esri.rest.support.ProjectParameters")],o);const j=y(o);async function x(e,t,r){t=j(t);const i=R(e),p={...i.query,f:"json",...t.toJSON()},f=t.outSpatialReference,u=m(t.geometries[0]),c=w(p,r);return d(i.path+"/project",c).then((({data:{geometries:l}})=>v(l,u,f)))}export{x as n,o as p};
