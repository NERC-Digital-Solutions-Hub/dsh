import{r as h,w as b,N as S,_ as s,a as M,f as d,z as A}from"./Bcg-2HKw.js";import{p as C}from"./w-2V2ENZ.js";import"./DGjcIG0n.js";const x=t=>{let o=class extends t{clone(){const f=b(this);S(f,"unable to clone instance of non-accessor class");const m=f.metadata,$=f.store,p={},u=new Map;for(const n in m){const r=m[n],e=$?.originOf(n),c=r.clonable;if(r.readOnly||c===!1||e!==s.USER&&e!==s.DEFAULTS&&e!==s.WEB_MAP&&e!==s.WEB_SCENE)continue;const i=this[n];let l=null;l=typeof c=="function"?c(i):c==="reference"?i:C(i),i!=null&&l==null||(e===s.DEFAULTS?u.set(n,l):p[n]=l)}const E=new(Object.getPrototypeOf(this)).constructor(p);if(u.size){const n=b(E)?.store;if(n)for(const[r,e]of u)n.set(r,e,s.DEFAULTS)}return E}};return o=h([M("esri.core.Clonable")],o),o};let a=class extends x(d){};a=h([M("esri.core.Clonable")],a),(function(t){t.ClonableMixin=x})(a||(a={}));const y=a;function D(t){const o=A(100*(1-t));return Math.max(0,Math.min(o,100))}function F(t){const o=1-t/100;return Math.max(0,Math.min(o,1))}export{y as a,D as n,F as r};
