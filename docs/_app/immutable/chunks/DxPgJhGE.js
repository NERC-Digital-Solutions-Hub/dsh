import{A as f}from"./BMtnoABP.js";import{I as L}from"./IsMQoFqb.js";async function y(e,a){const{data:r}=await L(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return r}const p=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function F(e,a){const{loadContext:r,...t}=a||{},n=r?await r.fetchServiceMetadata(e,t):await y(e,t),l=f();u(n),i(n);const o={serviceJSON:n,preferredHost:l};if((n.currentVersion??0)<10.5)return o;const c=`${e}/layers`,s=r?await r.fetchServiceMetadata(c,t):await y(c,t);return u(s),i(s),o.layersJSON={layers:s.layers,tables:s.tables},o}function m(e){const{type:a}=e;return!!a&&p.has(a)}function b(e){return e.type==="Table"}function i(e){e.layers=e.layers?.filter(m),e.tables=e.tables?.filter(b)}function d(e){e.type||="Feature Layer"}function w(e){e.type||="Table"}function u(e){e.layers?.forEach(d),e.tables?.forEach(w)}function O(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}export{O as l,F as n,y as t};
