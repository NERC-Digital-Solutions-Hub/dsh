const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./DEdGp127.js","./CAZyqt5R.js","./DP0V16Nu.js","./CU6wUyX1.js","./CSRfKCc0.js","./CgU_ym0P.js","./BxwgeB65.js","./Bl38d1ZM.js","./BSIbCQKi.js","./D5ChnGeR.js","./GQjTY16W.js","./CTTzL47n.js","./D_vRN7bp.js","./p6Fntpt9.js","./CtXuOupC.js","./BA0T1Qn_.js","./D6wORzA5.js","./9YvG7tFv.js","./SCWv10bh.js","./C589pdzj.js","./aQeO9QTD.js","./CHH26Uu5.js","./bKJYAjnx.js","./DcfWTtti.js","./Ds3r2Dab.js","./B1Q57cCo.js","./BnWrSK3m.js","./DCPZQuqm.js","./Wa8cmqdu.js","./TCiu3kge.js","./GlsaMnT1.js","./D8jPA8-d.js","./dIp5HJiT.js","./CCqfGTpX.js"])))=>i.map(i=>d[i]);
import{_ as N}from"./DP0V16Nu.js";import{t as E,aX as k,z as I,aW as J,r,m as i,a as R,q as T,k as U,a7 as f}from"./CAZyqt5R.js";import{q as W}from"./D_vRN7bp.js";import{S as X}from"./D8NS1B-J.js";import{b as Y,e as D}from"./CSRfKCc0.js";import{s as L,i as H,I as A}from"./CgU_ym0P.js";import{y as h}from"./CTTzL47n.js";import{k as Q}from"./BxwgeB65.js";import{p as V}from"./eiyiq6E_.js";import{y as z,u as B}from"./3jdp4mif.js";import{v as G,W as Z,z as M,Y as K,F as ee}from"./ClL7eAi9.js";import{i as te}from"./DbcvaEGK.js";import{g as re}from"./DHZtTsrO.js";import{n as ie}from"./BSIbCQKi.js";import{p as oe}from"./D9f6cX3L.js";import{e as se}from"./C1HC6MCw.js";import{a as ae}from"./K4DeeKc6.js";import{c as ne}from"./CJcnP4UQ.js";import{d as le}from"./DkWxEbuL.js";import{b as pe,m as ue,p as de,d as me,a as ye,l as ce,s as fe,y as he}from"./va2WQUTP.js";import{p as ge}from"./DfdT-3AH.js";import{j as we}from"./BGWGggVU.js";import{f as ve}from"./DjZV7VBY.js";import{t as Fe}from"./D3bQMmk1.js";import{c as be}from"./_Fb-n4Ma.js";import{e as xe}from"./CVnM_086.js";import{a as Oe,l as Se,A as Ie}from"./VwVd-p8E.js";import{m as C}from"./dIp5HJiT.js";import{s as Re}from"./BFDRhtlZ.js";import{y as O,I as Te}from"./CtXuOupC.js";import{u as Ce,m as Pe}from"./CLgTTcaU.js";import{R as y}from"./D8jPA8-d.js";import{p as qe}from"./PKmi-Myl.js";import{a as $e}from"./CCqfGTpX.js";let d=class extends E{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=z(!1,!1),this.type="wfs",this.refresh=k((async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:t}=await this._workerHandler.refresh(e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){const s=await this.queryFeaturesJSON(e,t);return re.fromJSON(s)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._workerHandler.queryFeatures(e?e.toJSON():void 0,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,t)}async queryObjectIds(e,t={}){return await this.load(t),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,t)}async queryExtent(e,t={}){await this.load(t);const s=await this._workerHandler.queryExtent(e?e.toJSON():void 0,t);return{count:s.count,extent:I.fromJSON(s.extent)}}async querySnapping(e,t={}){return await this.load(t),this._workerHandler.querySnapping(e,t)}async queryAttributeBins(e,t={}){await this.load(t);const s=await this._workerHandler.queryAttributeBins(e?.toJSON(),t);return te.fromJSON(s)}async _createLoadOptions(e){const{url:t,customParameters:s,name:n,namespaceUri:l,fields:a,geometryType:p,maxRecordCount:m,maxPageCount:g,maxTotalRecordCount:w,swapXY:v}=this.layer,c=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!t)throw new L("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await G(t,{customParameters:s,...e}));const P=["fields","geometryType","name","namespaceUri","swapXY"].some((F=>this.layer[F]==null)),u=P?await Z(this.wfsCapabilities,n,l,{spatialReference:c,customParameters:s,signal:e?.signal}):{...M(a??[]),geometryType:p,name:n,namespaceUri:l,spatialReference:c,swapXY:v},q=K(this.wfsCapabilities.readFeatureTypes(),u.name,u.namespaceUri),$=h.toJSON(u.geometryType),{operations:x}=this.wfsCapabilities,j=x.GetFeature.url,_=x.GetFeature.outputFormat;return{customParameters:s,featureType:q,fields:u.fields?.map((F=>F.toJSON()))??[],geometryField:u.geometryField,geometryType:$,getFeatureUrl:j,getFeatureOutputFormat:_,maxRecordCount:m,maxPageCount:g,maxTotalRecordCount:w,objectIdField:u.objectIdField,spatialReference:u.spatialReference?.toJSON(),swapXY:!!u.swapXY}}async _startWorker(e){const[t,s]=await J([this._createLoadOptions(e),V("WFSSourceWorker",{...e,strategy:Y("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=t.error||s.error||null,l=s.value||null;if(n)throw l&&l.close(),n;const a=t.value;this._connection=s.value,this._workerHandler=this._connection.createInvokeProxy();const p=await this._workerHandler.load(a,e);for(const m of p.warnings)H.getLogger(this.layer).warn("#load()",`${m.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:m});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:ie},extent:p.extent,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:B(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:a.maxRecordCount,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};r([i()],d.prototype,"capabilities",void 0),r([i({constructOnly:!0})],d.prototype,"layer",void 0),r([i()],d.prototype,"sourceJSON",void 0),r([i()],d.prototype,"type",void 0),r([i()],d.prototype,"wfsCapabilities",void 0),d=r([R("esri.layers.graphics.sources.WFSSource")],d);var b;const S=Re();let o=b=class extends ge(ae(se(le(ne(oe(be(xe(ve(Fe(pe(we(X(Q))))))))))))){static fromWFSLayerInfo(e){const{customParameters:t,fields:s,geometryField:n,geometryType:l,name:a,namespaceUri:p,objectIdField:m,spatialReference:g,swapXY:w,url:v,wfsCapabilities:c}=e;return new b({customParameters:t,fields:s,geometryField:n,geometryType:l,name:a,namespaceUri:p,objectIdField:m,spatialReference:g,swapXY:w,url:v,wfsCapabilities:c})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=T.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),O(this.renderer,this.fieldsIndex),Te(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,s){const n=e.filter((l=>l.name!==ee));this.geometryField&&n.unshift(new C({name:this.geometryField,alias:this.geometryField,type:"geometry"})),D(s,n.map((l=>l.toJSON())),t)}get parsedUrl(){return A(this.url)}set renderer(e){O(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return qe(this,e)}createQuery(){const e=new y({returnGeometry:!0,outFields:["*"],where:this.definitionExpression||"1=1"}),{timeOffset:t,timeExtent:s}=this;return e.timeExtent=t!=null&&s!=null?s.offset(-t.value,t.unit):s||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(y.from(e)||this.createQuery(),t))).then((s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(y.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(y.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(y.from(e)||this.createQuery(),t)))}async queryAttributeBins(e,t){const{source:s,capabilities:n}=await this.load();Oe(e,n,"WFSLayer");const l=await N(()=>import("./DEdGp127.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]),import.meta.url),a=await s.queryAttributeBins(l.default.from(e),t);if(a.features)for(const p of a.features)p.layer=p.sourceLayer=this;return a}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh();return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i({readOnly:!0})],o.prototype,"capabilities",null),r([i({type:String})],o.prototype,"copyright",void 0),r([i({readOnly:!0})],o.prototype,"createQueryVersion",null),r([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],o.prototype,"customParameters",void 0),r([i($e("dateFieldsTimeReference"))],o.prototype,"dateFieldsTimeZone",void 0),r([i({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),r([i({type:String})],o.prototype,"displayField",void 0),r([i(ue)],o.prototype,"elevationInfo",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"featureUrl",void 0),r([i({type:[C],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0),r([U("fields")],o.prototype,"writeFields",null),r([i(S.fieldsIndex)],o.prototype,"fieldsIndex",void 0),r([i({type:I,json:{name:"extent"}})],o.prototype,"fullExtent",void 0),r([i()],o.prototype,"geometryField",void 0),r([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:h.read},write:{target:"layerDefinition.geometryType",writer:h.write,ignoreOrigin:!0},origins:{service:{read:h.read}}}})],o.prototype,"geometryType",void 0),r([i({type:String})],o.prototype,"id",void 0),r([i(de)],o.prototype,"labelsVisible",void 0),r([i({type:[Ie],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Se},write:!0}})],o.prototype,"labelingInfo",void 0),r([i(me)],o.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],o.prototype,"listMode",void 0),r([i({type:String})],o.prototype,"objectIdField",void 0),r([i({type:["WFS"]})],o.prototype,"operationalLayerType",void 0),r([i({type:f,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"maxRecordCount",void 0),r([i({type:f})],o.prototype,"maxPageCount",void 0),r([i({type:f})],o.prototype,"maxTotalRecordCount",void 0),r([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],o.prototype,"mode",void 0),r([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"name",void 0),r([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"namespaceUri",void 0),r([i(ye)],o.prototype,"opacity",void 0),r([i(S.outFields)],o.prototype,"outFields",void 0),r([i({readOnly:!0})],o.prototype,"parsedUrl",null),r([i(ce)],o.prototype,"popupEnabled",void 0),r([i({type:W,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),r([i({types:Pe,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:Ce,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],o.prototype,"renderer",null),r([i(fe)],o.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],o.prototype,"source",void 0),r([i({type:T,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],o.prototype,"spatialReference",void 0),r([i({readOnly:!0,type:[f],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"spatialReferences",void 0),r([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"swapXY",void 0),r([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],o.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),r([i(he)],o.prototype,"url",void 0),r([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"version",void 0),r([i()],o.prototype,"wfsCapabilities",null),o=b=r([R("esri.layers.WFSLayer")],o);const mt=o;export{mt as default};
