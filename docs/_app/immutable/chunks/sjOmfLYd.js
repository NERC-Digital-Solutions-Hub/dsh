import{l as c}from"./BREZfOhl.js";import{r as l,m as h,i,aE as m,a as p}from"./-Rap9rN9.js";import{V as u}from"./ribPFsGq.js";import{n as f}from"./CQOAfpG2.js";import{k as b}from"./Buev1GnW.js";function A(n){return new c({getCollections:()=>[n.tables,n.layers],getChildrenFunction:s=>{const e=[];return"tables"in s&&e.push(s.tables),"layers"in s&&e.push(s.layers),e},itemFilterFunction:s=>{const e=s.parent;return!!e&&"tables"in e&&e.tables.includes(s)}})}function M(n){for(const s of n.values())s?.destroy();n.clear()}function d(n,s,e){let r,a;if(n)for(let o=0,t=n.length;o<t;o++){if(r=n.at(o),r?.[s]===e)return r;if(r?.type==="group"&&(a=d(r.layers,s,e),a))return a}}const B=n=>{let s=class extends n{constructor(...e){super(...e),this.layers=new u;const r=t=>{t.parent&&"remove"in t.parent&&t.parent.remove(t)},a=t=>{t.parent=this,this.layerAdded(t),t.type!=="elevation"&&t.type!=="base-elevation"||i.getLogger(this).error(`Layer 'title:${t.title}, id:${t.id}' of type '${t.type}' is not supported as an operational layer and will therefore be ignored.`)},o=t=>{t.parent=null,this.layerRemoved(t)};this.addHandles([this.layers.on("before-add",(t=>{if(t.item===this)return t.preventDefault(),void i.getLogger(this).error("#add()","Cannot add layer to itself.");r(t.item)})),this.layers.on("after-add",(t=>a(t.item))),this.layers.on("after-remove",(t=>o(t.item)))])}destroy(){const e=this.layers.toArray();for(const r of e)r.destroy();this.layers.destroy()}set layers(e){this._set("layers",f(e,this._get("layers")))}add(e,r){const a=this.layers;if(r=a.getNextIndex(r),e instanceof b){const o=e;o.parent===this?this.reorder(o,r):a.add(o,r)}else m(e)?e.then((o=>{this.destroyed||this.add(o,r)})):i.getLogger(this).error("#add()","The item being added is not a Layer or a Promise that resolves to a Layer.")}addMany(e,r){const a=this.layers;let o=a.getNextIndex(r);e.slice().forEach((t=>{t.parent!==this?(a.add(t,o),o+=1):this.reorder(t,o)}))}findLayerById(e){return d(this.layers,"id",e)}findLayerByUid(e){return d(this.layers,"uid",e)}remove(e){return this.layers.remove(e)}removeMany(e){return this.layers.removeMany(e)}removeAll(){return this.layers.removeAll()}reorder(e,r){return this.layers.reorder(e,r)}layerAdded(e){}layerRemoved(e){}};return l([h()],s.prototype,"layers",null),s=l([p("esri.support.LayersMixin")],s),s},g=new Set(["feature","subtype-group"]);function y(n,s,e){if(n)for(let r=0,a=n.length;r<a;r++){const o=n.at(r);if(o[s]===e)return o;if(o?.type==="group"){const t=y(o.tables,s,e);if(t)return t}}}const I=n=>{let s=class extends n{constructor(...e){super(...e),this.tables=new u,this.addHandles([this.tables.on("after-add",(r=>{const a=r.item;a.parent&&a.parent!==this&&"tables"in a.parent&&a.parent.tables.remove(a),a.parent=this,g.has(a.type)||i.getLogger(this).error(`Layer 'title:${a.title}, id:${a.id}' of type '${a.type}' is not supported as a table and will therefore be ignored.`)})),this.tables.on("after-remove",(r=>{r.item.parent=null}))])}destroy(){const e=this.tables.toArray();for(const r of e)r.destroy();this.tables.destroy()}set tables(e){this._set("tables",f(e,this._get("tables")))}findTableById(e){return y(this.tables,"id",e)}findTableByUid(e){return y(this.tables,"uid",e)}};return l([h()],s.prototype,"tables",null),s=l([p("esri.support.TablesMixin")],s),s};export{B as a,I as l,M as n,A as t};
