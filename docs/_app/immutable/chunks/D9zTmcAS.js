import{i as N,s as S,c as O}from"./CgU_ym0P.js";import{$ as b}from"./Bqd_gqra.js";import{o as B}from"./CawxbvcR.js";import{a as I,g as q,x as y,h as g,b as z,T as $,p as x}from"./DWPPkjmw.js";import{n as F,t as u,F as D,I as L}from"./CcFT35nQ.js";import{f as h}from"./D0Se3yGq.js";function R(s){return"timeZone"in s}function J(s){return"timeZone"in s}function A(s){return"dateFieldsTimeZone"in s}const v=new Map;class m{static fromJSON(e){return new m(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new m(e.fields??[],_(e))}static fromLayerJSON(e){return new m(e.fields??[],_(e))}constructor(e=[],t){this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=t?new Map(t):null;const n=[];for(const i of this.fields){const r=i?.name,o=T(r);if(r&&o){const l=d(r);this._fieldsMap.set(r,i),this._fieldsMap.set(l,i),this._normalizedFieldsMap.set(o,i),n.push(`${l}:${i.type}:${this._timeZoneByFieldName?.get(r)}`),I(i)?(this.dateFields.push(i),this._dateFieldsSet.add(i)):q(i)&&(this._numericFieldsSet.add(i),this.numericFields.push(i)),y(i)||g(i)||(i.editable=i.editable==null||!!i.editable,i.nullable=i.nullable==null||!!i.nullable)}}n.sort(),this.uid=n.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)y(e)||g(e)||e.nullable||z(e)!==void 0||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===e?.uid}has(e){return this.get(e)!=null}get(e){if(!e)return;let t=this._fieldsMap.get(e);return t||(t=this._fieldsMap.get(d(e))??this._normalizedFieldsMap.get(T(e)),t&&this._fieldsMap.set(e,t),t)}getTimeZone(e){const t=this.get(e&&typeof e!="string"?e.name:e);return t?this._timeZoneByFieldName?this._timeZoneByFieldName.get(t.name):t.type==="date"||t.type==="esriFieldTypeDate"?(N.getLogger("esri.layers.support.FieldsIndex").errorOnce(new S("getTimeZone:no-timezone-information",`no time zone information for field '${t.name}'`)),F):Z.has(t.type)?u:null:null}getLuxonTimeZone(e){const t=this.getTimeZone(e);return t?t===u?B.instance:t===F?D.utcInstance:b(v,t,(()=>L.create(t))):null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return $(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){return this.get(e)?.name??void 0}toJSON(){return{fields:this.fields.map((e=>O(e)?e.toJSON():e)),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function d(s){return s.trim().toLowerCase()}function T(s){return x(s)?.toLowerCase()??""}const Z=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function _(s){const e=new Map;if(!s.fields)return e;const t=s.datesInUnknownTimezone===!0,{timeInfo:n,editFieldsInfo:i}=s,r=(n?"startField"in n?n.startField:n.startTimeField:"")??"",o=(n?"endField"in n?n.endField:n.endTimeField:"")??"",l=A(s)?s.dateFieldsTimeZone??null:s.dateFieldsTimeReference?h(s.dateFieldsTimeReference):null,c=i?R(i)?i.timeZone??l:i.dateFieldsTimeReference?h(i.dateFieldsTimeReference):l??F:null,p=n?J(n)?n.timeZone??l:n.timeReference?h(n.timeReference):l:null,w=new Map([[d(i?.creationDateField??""),c],[d(i?.editDateField??""),c],[d(r),p],[d(o),p]]);for(const{name:a,type:f}of s.fields)if(Z.has(f))e.set(a,u);else if(f!=="date"&&f!=="esriFieldTypeDate")e.set(a,null);else if(t)e.set(a,u);else{const M=w.get(d(a??""))??l;e.set(a,M)}return e}export{m as Z};
