import{r as g,a as f}from"./-Rap9rN9.js";import{q as w}from"./B93bZoKt.js";import{V as u}from"./ribPFsGq.js";import{l as h,h as n}from"./DJt6mz6N.js";import{m}from"./DsZsc8EX.js";import{t as d}from"./CRfBo2mR.js";import{g as V}from"./C8DOR-R3.js";import{S as b,u as S}from"./DRjfP7nu.js";import{t as _}from"./Cv0IDYfP.js";import{O as T}from"./DYyjuUxi.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const s=this.layer;return this.graphicsViews.reverse().flatMap((i=>{const t=this._popupTemplates.get(i),a=i.hitTest(e);for(const o of a)o.layer=s,o.sourceLayer=s,o.popupTemplate=t;return a})).map((i=>({type:"graphic",graphic:i,layer:s,mapPoint:e})))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([h((()=>this.layer?.featureCollections),(e=>{this._clear();for(const{popupInfo:r,featureSet:s,layerDefinition:i}of e){const t=V.fromJSON(s),a=new u(t.features),o=i.drawingInfo,c=r?w.fromJSON(r):null,p=d(o.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:a,renderer:p,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=l,this._popupTemplates.set(l,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=p.symbol):this.layer.lineSymbol=p.symbol:this.layer.polygonSymbol=p.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}}),n),h((()=>this.layer?.polygonSymbol),(e=>{this._graphicsViewMap.polygon.renderer=new m({symbol:e})}),n),h((()=>this.layer?.lineSymbol),(e=>{this._graphicsViewMap.polyline.renderer=new m({symbol:e})}),n),h((()=>this.layer?.pointSymbol),(e=>{this._graphicsViewMap.point.renderer=new m({symbol:e})}),n)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=g([f("esri.views.2d.layers.GeoRSSLayerView2D")],y);const I=y;export{I as default};
