import{H as I}from"./pCx8oau_.js";import{f as g,u as y,s as b}from"./BaYj2Wow.js";import{k as j,r as s,m as a,p,a as U}from"./iFuBOtDF.js";import"./DHq0rblm.js";import"./BfhsIlKo.js";let r=class extends j{constructor(n){super(n),this.container=null,this.ranges=null}readContainer(n,e){return{sourceId:e.sourceId,globalId:e.globalId}}readRanges(n,e){return[...e.gaps.map((t=>({firstUnit:t.start,numUnits:t.end-t.start+1,isGap:!0}))),...e.unitIdentifiers.map((t=>({firstUnit:t.firstUnit,numUnits:t.numUnits,isGap:!1,content:{sourceId:t.sourceId,globalId:t.globalId}})))]}};s([a({type:Object})],r.prototype,"container",void 0),s([p("container",["sourceId","globalId"])],r.prototype,"readContainer",null),s([a({type:[Object]})],r.prototype,"ranges",void 0),s([p("ranges",["gaps","unitIdentifiers"])],r.prototype,"readRanges",null),r=s([U("esri.rest.networks.unitIdentifiers.support.UnitQueryResult")],r);async function R(n,e,t){const o=g(n),i=e.toJSON();e.objects&&(i.objects=JSON.stringify(e.objects));const u={...i,f:"json"},d=y({...o.query,...u}),c=b(d,{...t,method:"post"}),l=`${o.path}/unitIdentifiers/query`,{data:f}=await I(l,c);return f.objects.map((m=>r.fromJSON(m)))}export{R as queryUnitIdentifiers};
