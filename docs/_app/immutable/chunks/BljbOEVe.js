import{l as F,e as N,r as h,m as d,o as G,b as z,a as S}from"./CKPuaBYR.js";import T from"./BnFCzMm9.js";import{b as P}from"./w-2V2ENZ.js";import"./DGjcIG0n.js";import{f as R}from"./Dc40Hn7j.js";import{f as j,y as x}from"./DXOBWh9J.js";import{l as q}from"./DQ_YjUJb.js";import{m as J}from"./B5hrGkZw.js";var v;const w=new N({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let c=v=class extends F{constructor(o){super(o),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(o,l){return this.readFeaturesWithClass(o,l,T)}writeGeometryType(o,l,n,e){if(o)return void w.write(o,l,n,e);const{features:i}=this;if(i){for(const r of i)if(r?.geometry!=null)return void w.write(r.geometry.type,l,n,e)}}readQueryGeometry(o,l){if(!o)return null;const n=!!o.spatialReference,e=j(o);return e&&!n&&l.spatialReference&&(e.spatialReference=R.fromJSON(l.spatialReference)),e}writeSpatialReference(o,l){if(o)return void(l.spatialReference=o.toJSON());const{features:n}=this;if(n){for(const e of n)if(e&&e.geometry!=null&&e.geometry.spatialReference)return void(l.spatialReference=e.geometry.spatialReference.toJSON())}}clone(){return new v(this.cloneProperties())}cloneProperties(){return P({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(o){const l=this.write();if(l.features&&Array.isArray(o)&&o.length>0)for(let n=0;n<l.features.length;n++){const e=l.features[n];if(e.geometry){const i=o?.[n];e.geometry=i?.toJSON()||e.geometry}}return l}quantize(o){const{scale:[l,n],translate:[e,i]}=o,r=t=>Math.round((t-e)/l),a=t=>Math.round((i-t)/n),m=this.features,y=this._getQuantizationFunction(this.geometryType,r,a);for(let t=0,u=m.length;t<u;t++)y?.(m[t].geometry)||(m.splice(t,1),t--,u--);return this.transform=o,this}unquantize(){const{geometryType:o,features:l,transform:n}=this;if(!n)return this;const{translate:[e,i],scale:[r,a]}=n,m=p=>p*r+e,y=p=>i-p*a;let t=null,u=null;if(this.hasZ&&n?.scale?.[2]!=null){const{translate:[,,p],scale:[,,g]}=n;t=f=>f*g+p}if(this.hasM&&n?.scale?.[3]!=null){const{translate:[,,,p],scale:[,,,g]}=n;u=f=>f==null?f:f*g+p}const s=this._getHydrationFunction(o,m,y,t,u);for(const{geometry:p}of l)p!=null&&s&&s(p);return this.transform=null,this}readFeaturesWithClass(o,l,n){const e=R.fromJSON(l.spatialReference),i=[];for(let r=0;r<o.length;r++){const a=o[r],m=n.fromJSON(a),y=a.geometry?.spatialReference;m.geometry==null||y||(m.geometry.spatialReference=e);const t=a.aggregateGeometries,u=m.aggregateGeometries;if(t&&u!=null)for(const s in u){const p=u[s],g=t[s],f=g?.spatialReference;p==null||f||(p.spatialReference=e)}i.push(m)}return i}_quantizePoints(o,l,n){let e,i;const r=[];for(let a=0,m=o.length;a<m;a++){const y=o[a];if(a>0){const t=l(y[0]),u=n(y[1]);t===e&&u===i||(r.push([t-e,u-i]),e=t,i=u)}else e=l(y[0]),i=n(y[1]),r.push([e,i])}return r.length>0?r:null}_getQuantizationFunction(o,l,n){return o==="point"?e=>(e.x=l(e.x),e.y=n(e.y),e):o==="polyline"||o==="polygon"?e=>{const i=x(e)?e.rings:e.paths,r=[];for(let a=0,m=i.length;a<m;a++){const y=i[a],t=this._quantizePoints(y,l,n);t&&r.push(t)}return r.length>0?(x(e)?e.rings=r:e.paths=r,e):null}:o==="multipoint"?e=>{const i=this._quantizePoints(e.points,l,n);return i&&i.length>0?(e.points=i,e):null}:o==="extent"?e=>e:null}_getHydrationFunction(o,l,n,e,i){return o==="point"?r=>{r.x=l(r.x),r.y=n(r.y),e&&(r.z=e(r.z))}:o==="polyline"||o==="polygon"?r=>{const a=x(r)?r.rings:r.paths;let m,y;for(let t=0,u=a.length;t<u;t++){const s=a[t];for(let p=0,g=s.length;p<g;p++){const f=s[p];p>0?(m+=f[0],y+=f[1]):(m=f[0],y=f[1]),f[0]=l(m),f[1]=n(y)}}if(e&&i)for(let t=0,u=a.length;t<u;t++){const s=a[t];for(let p=0,g=s.length;p<g;p++){const f=s[p];f[2]=e(f[2]),f[3]=i(f[3])}}else if(e)for(let t=0,u=a.length;t<u;t++){const s=a[t];for(let p=0,g=s.length;p<g;p++){const f=s[p];f[2]=e(f[2])}}else if(i)for(let t=0,u=a.length;t<u;t++){const s=a[t];for(let p=0,g=s.length;p<g;p++){const f=s[p];f[2]=i(f[2])}}}:o==="extent"?r=>{r.xmin=l(r.xmin),r.ymin=n(r.ymin),r.xmax=l(r.xmax),r.ymax=n(r.ymax),e&&r.zmax!=null&&r.zmin!=null&&(r.zmax=e(r.zmax),r.zmin=e(r.zmin)),i&&r.mmax!=null&&r.mmin!=null&&(r.mmax=i(r.mmax),r.mmin=i(r.mmin))}:o==="multipoint"?r=>{const a=r.points;let m,y;for(let t=0,u=a.length;t<u;t++){const s=a[t];t>0?(m+=s[0],y+=s[1]):(m=s[0],y=s[1]),s[0]=l(m),s[1]=n(y)}if(e&&i)for(let t=0,u=a.length;t<u;t++){const s=a[t];s[2]=e(s[2]),s[3]=i(s[3])}else if(e)for(let t=0,u=a.length;t<u;t++){const s=a[t];s[2]=e(s[2])}else if(i)for(let t=0,u=a.length;t<u;t++){const s=a[t];s[2]=i(s[2])}}:null}};h([d({type:String,json:{write:!0}})],c.prototype,"displayFieldName",void 0),h([d({type:Boolean,json:{write:{overridePolicy:o=>({enabled:o})}}})],c.prototype,"exceededTransferLimit",void 0),h([d({type:[T],json:{write:!0}})],c.prototype,"features",void 0),h([G("features")],c.prototype,"readFeatures",null),h([d({type:[J],json:{write:!0}})],c.prototype,"fields",void 0),h([d({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:w.read}}})],c.prototype,"geometryType",void 0),h([z("geometryType")],c.prototype,"writeGeometryType",null),h([d({type:Boolean,json:{write:{overridePolicy:o=>({enabled:o})}}})],c.prototype,"hasM",void 0),h([d({type:Boolean,json:{write:{overridePolicy:o=>({enabled:o})}}})],c.prototype,"hasZ",void 0),h([d({types:q,json:{write:!0}})],c.prototype,"queryGeometry",void 0),h([G("queryGeometry")],c.prototype,"readQueryGeometry",null),h([d({type:R,json:{write:!0}})],c.prototype,"spatialReference",void 0),h([z("spatialReference")],c.prototype,"writeSpatialReference",null),h([d({json:{write:!0}})],c.prototype,"transform",void 0),c=v=h([S("esri.rest.support.FeatureSet")],c),c.prototype.toJSON.isDefaultToJSON=!0;export{c as g};
