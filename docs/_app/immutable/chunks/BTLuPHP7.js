import{g as _,bf as v,R as h,bg as S,r as a,m as p,a as w}from"./CAZyqt5R.js";import{S as b}from"./CSRfKCc0.js";import{d as k}from"./p6Fntpt9.js";import{t as E}from"./DmxaQ-k8.js";import{h as u,l as C,a as A}from"./BSIbCQKi.js";import"./CgU_ym0P.js";import{h as F}from"./emnTNUj-.js";import{Q as P,P as G,L as $,O as I}from"./BxwgeB65.js";import{a as O}from"./Dt6RVOnn.js";import{y as R}from"./CTTzL47n.js";import{u as H}from"./DPEtbwIK.js";import{s as Z}from"./DIDjTM9_.js";import{u as x}from"./CLnBLmV8.js";import{f as z}from"./mbgU1HFE.js";import{L}from"./Cueg9X07.js";import{Z as M}from"./kPPYnTpt.js";import{y as W}from"./4_O6Dsow.js";import{A as y}from"./BDnYnEhT.js";import{E as N,y as q}from"./CoU31v1M.js";import{o as T,i as j}from"./CFchrTbZ.js";import{i as m,r as J,n as g}from"./DQxIBTaO.js";import{g as B}from"./Uu4f9sW5.js";const f="graphics-collections";let n=class extends _{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="map-notes")return m();const s=async(o,r)=>(await v(e.whenLayerView(t),r)).elevationAlignPointsInFeatures(o,r);return m(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:s})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return J(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d",s=this._extrudedPolygonSymbolsCount>0;return i&&t.type!=="map-notes"&&s?g(s,(async(o,r)=>{const l=await e.whenLayerView(t);return h(r),l.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},r)})):g()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new F,this._memoizedMakeGetGroundElevation=E(j)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e))),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add((()=>this.getGraphicsLayers()),(i=>{this._updatingHandles.removeHandles(f);for(const s of i)this._addMany(s.graphics.toArray()),this.addHandles([s.on("graphic-update",(o=>this._onGraphicUpdate(o))),this._updatingHandles.addOnCollectionChange((()=>s.graphics),(o=>this._onGraphicsChanged(o)))],f)}),u);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:i})=>{W(i,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()})),C((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),u),A((()=>t),["edits","apply-edits","graphic-update"],(()=>this._symbologySnappingFetcher.notifySymbologyChange()))])}async fetchCandidates(e,t){const{point:i,coordinateHelper:{spatialReference:s}}=e,o=await S(this._mapSources((d=>this._fetchCandidatesForSource(d,e,t))));h(t);const r=this._memoizedMakeGetGroundElevation(this.view,s),l=o.flat().map((d=>T(d,r)));return N(i,l),l}async _fetchCandidatesForSource(e,t,i){const s=q({parameters:t,mode:this.view?.type??"2d"}),o=await x(e.queryEngine,s,i);h(i);const r=await this._snappingElevationAligner.alignCandidates(o.candidates,t.coordinateHelper.spatialReference,i);h(i);const l=await this._symbologySnappingFetcher.fetch(r,i);h(i);const d=l.length===0?r:[...r,...l];return this._snappingElevationFilter.filter(s,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],i=new Map;for(const s of e)s.geometry!=null&&(this._needsInitializeProjection(s.geometry.spatialReference)?(t.push(s.geometry.spatialReference),i.set(s.uid,s)):this._add(s));this._createPendingAdd(t,i)}_createPendingAdd(e,t){if(!e.length)return;const i=k((async r=>{await P(e.map((l=>({source:l,dest:this.spatialReference}))),{signal:r}),this._markLoadedSpatialReferences(e);for(const l of t.values())this._add(l)}));this._updatingHandles.addPromise(i.promise);const s={task:i,graphics:t},o=()=>b(this._pendingAdds,s);i.promise.then(o,o),this._pendingAdds.push(s)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const i=t.wkt2||t.wkt;i&&this._loadedWkts.add(i)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=G.fromExtent(t));const i=this._ensureSource(t.type);if(i==null)return;const s=this._createOptimizedFeature(e.uid,t);s!=null&&(i.featureStore.add(s),y(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!$(e,this.spatialReference)}_createOptimizedFeature(e,t){const i=I(O(t),this.spatialReference);if(!i)return null;const s=this._ensureGeometryHasZ(i),o=H(s,this._hasZ,!1);return new Z(o,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=s=>{for(;s.length<3;)s.push(0)},i=e.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(t);break;case"polyline":i.paths.forEach((s=>s.forEach(t)));break;case"polygon":i.rings.forEach((s=>s.forEach(t)))}return i}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const i=this._createSource(e);return this._sources[e]=i,i}_createSource(e){const t=R.toJSON(e),i=this._hasZ,s=new z({geometryType:t,hasZ:i,hasM:!1});return{featureStore:s,queryEngine:new L({featureStore:s,fieldsIndex:M.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:t,hasM:!1,hasZ:i,featureIdInfo:{type:"object-id",fieldName:c},spatialReference:this.spatialReference,priority:B.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const i=t.uid;e.featureStore.has(i)&&(e.featureStore.removeById(t.uid),y(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:i,polyline:s,multipoint:o}=this._sources,r=[];return t!=null&&r.push(e(t)),i!=null&&r.push(e(i)),s!=null&&r.push(e(s)),o!=null&&r.push(e(o)),r}};a([p()],n.prototype,"getGraphicsLayers",void 0),a([p({constructOnly:!0})],n.prototype,"layerSource",void 0),a([p({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([p({constructOnly:!0})],n.prototype,"view",void 0),a([p({readOnly:!0})],n.prototype,"updating",null),a([p({readOnly:!0})],n.prototype,"availability",void 0),a([p()],n.prototype,"_hasZ",null),a([p()],n.prototype,"_snappingElevationAligner",null),a([p()],n.prototype,"_snappingElevationFilter",null),a([p()],n.prototype,"_symbologySnappingFetcher",null),a([p()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=a([w("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
