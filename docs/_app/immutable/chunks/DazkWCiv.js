import{l as u,r as i,m as n,a as y,H as d}from"./Bqd_gqra.js";import{f as l,u as h,s as x}from"./X7dkXTy5.js";import"./CSRfKCc0.js";import"./CgU_ym0P.js";import{d as G}from"./Cp0O7xYG.js";let r=class extends u{constructor(t){super(t),this.maxGeometryCountExceeded=!1,this.associations=[]}};i([n({type:Boolean,json:{write:!0}})],r.prototype,"maxGeometryCountExceeded",void 0),i([n({type:[G],json:{write:!0}})],r.prototype,"associations",void 0),r=i([y("esri.rest.networks.support.AssociationGeometriesResult")],r);async function g(t,o,e){const s=l(t),a={...o.toJSON(),f:"json"},c=h({...s.query,...a});e?e.method="post":e={method:"post"};const p=x(c,e),m=`${s.path}/synthesizeAssociationGeometries`;return d(m,p).then((f=>R(f,o.outSpatialReference)))}function R(t,o){const{data:e}=t;if(o)for(const s of e.associations)s.geometry.spatialReference||(s.geometry.spatialReference=o.clone());return r.fromJSON(e)}export{g as synthesizeAssociationGeometries};
