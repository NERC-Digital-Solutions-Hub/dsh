import{H as n}from"./CVNciJfy.js";import{s as k}from"./BfhsIlKo.js";import{f as l,s as u,u as c}from"./BqdZpaCH.js";import{i as v}from"./_eTnGSCm.js";async function F(e,t,r){const i=l(e),a=t.toJSON();t.validationSet&&(a.validationSet=JSON.stringify(t.validationSet));const o={...a,returnEdits:!0,f:"json"},d=c({...i.query,...o}),s=u(d,{...r,method:"post"}),p=`${i.path}/validateNetworkTopology`,{data:f}=await n(p,s);return v.fromJSON(m(f))}async function N(e,t,r){if(!t.gdbVersion)throw new k("submit-validate-network-topology-job:missing-gdb-version","version is missing");const i=l(e),a=t.toJSON();t.validationSet&&(a.validationSet=JSON.stringify(t.validationSet));const o=u(i.query,{query:c({...a,returnEdits:!0,async:!0,f:"json"}),...r,method:"post"}),d=`${i.path}/validateNetworkTopology`,{data:s}=await n(d,o);return s?s.statusUrl:null}function m(e){return e.serviceEdits&&(e.serviceEdits=e.serviceEdits.map((t=>(t.editedFeatures.spatialReference&&(t.editedFeatures.spatialReference={wkid:t.editedFeatures.spatialReference.wkid,wkt:t.editedFeatures.spatialReference.wkt,wkt2:t.editedFeatures.spatialReference.wkt2,latestWkid:t.editedFeatures.spatialReference.latestWkid,latestVcsWkid:t.editedFeatures.spatialReference.latestVcsWkid,vcsWkid:t.editedFeatures.spatialReference.vcsWkid}),t={layerId:t.id,editedFeatures:t.editedFeatures})))),e}export{m as handleValidateNetworkTopologyResult,N as submitValidateNetworkTopologyJob,F as validateNetworkTopology};
