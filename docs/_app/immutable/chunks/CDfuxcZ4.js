import{aN as n,M as d,h as p}from"./BNOt8YR4.js";import{G as t}from"./BvIqEAWZ.js";import{hydratedAdapter as i}from"./8PlPy7wY.js";function a(e){const r=Array.isArray(e)?e[0].spatialReference:e.spatialReference;return r?d(p,r):p.WGS84}function w(e){return t.extendedSpatialReferenceInfo(e)}function R(e,r){return n(e),t.clip(i,a(e),e,r)}function x(e,r){return n(e),t.cut(i,a(e),e,r)}function S(e,r){return n(e),n(r),t.contains(i,a(e),e,r)}function y(e,r){return n(e),n(r),t.crosses(i,a(e),e,r)}function A(e,r,s){return n(e),n(r),t.distance(i,a(e),e,r,s)}function D(e,r){return n(e),n(r),t.equals(i,a(e),e,r)}function L(e,r){return n(e),n(r),t.intersects(i,a(e),e,r)}function T(e,r){return n(e),n(r),t.touches(i,a(e),e,r)}function V(e,r){return n(e),n(r),t.within(i,a(e),e,r)}function v(e,r){return n(e),n(r),t.disjoint(i,a(e),e,r)}function z(e,r){return n(e),n(r),t.overlaps(i,a(e),e,r)}function H(e,r,s){return n(e),n(r),t.relate(i,a(e),e,r,s)}function N(e){return n(e),t.isSimple(i,a(e),e)}function I(e){return n(e),t.simplify(i,a(e),e)}function J(e,r=!1){return t.convexHull(i,a(e),e,r)}function O(e,r){return n(r),t.difference(i,a(e),e,r)}function b(e,r){return n(r),t.symmetricDifference(i,a(e),e,r)}function j(e,r){return n(r),t.intersect(i,a(e),e,r)}function q(e){return t.union(i,a(e),e)}function B(e,r,s,c,o,f){return t.offset(i,a(e),e,r,s,c,o,f)}function C(e,r,s,c=!1){return t.buffer(i,a(e),e,r,s,c)}function E(e,r,s,c,o,f){return t.geodesicBuffer(i,a(e),e,r,s,c,o,f)}function G(e,r,s=!0){return n(e),t.nearestCoordinate(i,a(e),e,r,s)}function P(e,r){return n(e),t.nearestVertex(i,a(e),e,r)}function M(e,r,s,c){return n(e),t.nearestVertices(i,a(e),e,r,s,c)}function l(e){return"xmin"in e?"center"in e?e.center:null:"x"in e?e:"extent"in e?e.extent?.center??null:null}function W(e,r,s){if(e==null)throw new u;const c=e.spatialReference;if((s=s??l(e))==null)throw new u;const o=e.constructor.fromJSON(t.rotate(e,r,s));return o.spatialReference=c,o}function k(e,r){if(e==null)throw new u;const s=e.spatialReference;if((r=r??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.flipHorizontal(e,r));return c.spatialReference=s,c}function F(e,r){if(e==null)throw new u;const s=e.spatialReference;if((r=r??l(e))==null)throw new u;const c=e.constructor.fromJSON(t.flipVertical(e,r));return c.spatialReference=s,c}function K(e,r,s,c){return n(e),t.generalize(i,a(e),e,r,s,c)}function Q(e,r,s){return n(e),t.densify(i,a(e),e,r,s)}function U(e,r,s,c=0){return n(e),t.geodesicDensify(i,a(e),e,r,s,c)}function X(e,r){return n(e),t.planarArea(i,a(e),e,r)}function Y(e,r){return n(e),t.planarLength(i,a(e),e,r)}function Z(e,r,s){return n(e),t.geodesicArea(i,a(e),e,r,s)}function _(e,r,s){return n(e),t.geodesicLength(i,a(e),e,r,s)}function $(e,r){return t.intersectLinesToPoints(i,a(e),e,r)}function ee(e,r){t.changeDefaultSpatialReferenceTolerance(e,r)}function re(e){t.clearDefaultSpatialReferenceTolerance(e)}class u extends Error{constructor(){super("Illegal Argument Exception")}}export{C as buffer,ee as changeDefaultSpatialReferenceTolerance,re as clearDefaultSpatialReferenceTolerance,R as clip,S as contains,J as convexHull,y as crosses,x as cut,Q as densify,O as difference,v as disjoint,A as distance,D as equals,w as extendedSpatialReferenceInfo,k as flipHorizontal,F as flipVertical,K as generalize,Z as geodesicArea,E as geodesicBuffer,U as geodesicDensify,_ as geodesicLength,j as intersect,$ as intersectLinesToPoints,L as intersects,N as isSimple,G as nearestCoordinate,P as nearestVertex,M as nearestVertices,B as offset,z as overlaps,X as planarArea,Y as planarLength,H as relate,W as rotate,I as simplify,b as symmetricDifference,T as touches,q as union,V as within};
