import{d}from"./D1_MfKwV.js";import{i as h}from"./BfhsIlKo.js";import{F as l}from"./DtUpcSZL.js";import{z as S,f as g}from"./CVNciJfy.js";import E from"./BVCcMg0-.js";import{n as N,i as D}from"./C3h67sDy.js";import{s as F}from"./VMSlSy0z.js";import{g as M}from"./D-SjBRAN.js";import{n as T,i as I}from"./BZuoptyS.js";const w=()=>h.getLogger("esri.rest.support.meshFeatureSet");function U(e,s,t){const r=t.features;t.features=[],delete t.geometryType;const n=M.fromJSON(t);if(n.geometryType="mesh",!t.assetMaps)return n;const o=$(s,t.assetMaps),u=e.sourceSpatialReference??g.WGS84,c=t.globalIdFieldName,{outFields:a}=e,m=a!=null&&a.length>0?L(a.includes("*")?null:new Set(a)):()=>({});for(const i of r){const f=O(i,c,u,s,o);n.features.push(new d({geometry:f,attributes:m(i)}))}return n}function L(e){return({attributes:s})=>{if(!s)return{};if(!e)return s;for(const t in s)e.has(t)||delete s[t];return s}}function O(e,s,t,r,n){const o=e.attributes[s],u=n.get(o);if(u==null||!e.geometry)return null;const c=T(e.attributes,t,r.transformFieldRoles),a=S.fromJSON(e.geometry);a.spatialReference=t;const m=I(e.attributes,r.transformFieldRoles),i=t.isGeographic?"local":"georeferenced",f=b(u);return f?E.createWithExternalSource(c,f,{extent:a,transform:m,vertexSpace:i,unitConversionDisabled:!0}):E.createIncomplete(c,{extent:a,transform:m,vertexSpace:i})}var p;function $(e,s){const t=new Map;for(const r of s){const n=r.parentGlobalId;if(n==null)continue;const o=r.assetName,u=r.assetType,c=r.assetHash,a=r.assetURL,m=r.conversionStatus,i=r.seqNo,f=F(u,e.supportedFormats);if(!f){w().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${u}, but it does not list it as a supported type`);continue}const y=l(t,n,(()=>({files:new Map})));l(y.files,o,(()=>({name:o,type:u,mimeType:f,status:P(m),parts:[]}))).parts[i]={hash:c,url:a}}return t}function b(e){const s=Array.from(e.files.values()),t=new Array;for(const r of s){if(r.status!==p.COMPLETED)return null;const n=new Array;for(const o of r.parts){if(!o)return null;n.push(new N(o.url,o.hash))}t.push(new D(r.name,r.mimeType,n))}return{type:"service",assets:t}}function P(e){switch(e){case"COMPLETED":case"SUBMITTED":return p.COMPLETED;case"INPROGRESS":return p.PENDING;default:return p.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(p||(p={}));export{$ as assetMapFromAssetMapsJSON,O as extractMesh,U as meshFeatureSetFromJSON};
