const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./DPZVGWN8.js","./DP0V16Nu.js","./CU6wUyX1.js","./B1ITX55D.js","./ByNAQ7iQ.js","./DsnmJJEf.js","./Bzs1IGhx.js","./CMZp0cv5.js","./CjfPyj--.js","./B968l6pj.js","./nye1TwT2.js","./BoXjSTyo.js","./DyUjP8L-.js","../assets/web-map-store.BHxZ1DOT.css","./BGHOg2OT.js","./C_Eza5zK.js","./DwLD0TYM.js","./CDxsWTOX.js","./BifNJpTd.js","./DdhNVO-L.js","./uWl94sWk.js","./BEafG4hn.js","./CWdZkGcT.js","./D6wORzA5.js","./yW9poZ-r.js","./C5CzMsLd.js","./DzhzPnc5.js","./BanE3row.js","./DL-8ul4q.js","./CFvqIyKk.js","./BHnd8yLn.js","./DHfpgS94.js","./WDC8Usu7.js","./XKrxa5ty.js","./Cl5lrJ4c.js","./DgSUyPYY.js","./BPcLLMNQ.js","./nbqMFtoO.js","./9YvG7tFv.js","./Bdr1pYmA.js","./BHheF0XZ.js","./aQeO9QTD.js","./DRp25j1b.js","./Bp_LUz0u.js","./BoFyIY7o.js","./CzjI3SsG.js","./8_emHlKV.js","./CBzJPhOc.js","./BwD7A3Pn.js","./DRcPUXwr.js","./vTGQ9Yh-.js","./BvbgBjLF.js","./GKolV7NZ.js","./H1rimoqL.js","./CvI6UG9_.js","./hlAjYohI.js","./Y1koLyFO.js","./CFncljnX.js","./DxapN4cp.js","./BFKXUbKC.js","./LOXXtRdF.js","./BrbQhw4h.js","./VMSlSy0z.js","./C4mDvd-b.js","./C175UXj1.js","./KmpVbb4B.js","./DMT3rL2o.js","./B-KgXJb8.js","./DlsfqId2.js","./yVvCB3WM.js","./Btze3WDK.js","./D14GfpHM.js","./B7PO4SVM.js","./CpG_onAt.js","./Djp3mnm5.js","./DxydSnRH.js","./DQOJ18NT.js","./DiCr2xcq.js","./9xhWwmq4.js","./C_cUXPKe.js","./KhA_xN7d.js","./CxY_wLwb.js","./BB75J9yC.js","./K77QyNjU.js","./ySfHLlox.js","./DGqS9RX3.js","./BtfJXAAT.js","./_weiC0jf.js","./Cv7VMk__.js","./Bwwdrh0t.js","./KcazVFlU.js","./CYsUaMUi.js","./CXAdvvsT.js","./BtMl8wxW.js","./4ATg-VOb.js","./Cq4ficUZ.js","./CYJO77EK.js","./D-oqZmOf.js","./CGUrftF-.js","./C8y_T8Ud.js","./BqMYqny5.js","./DCdj6Lab.js","./CNpZz4py.js","./BkQcsSCB.js","./DPb6J-GU.js","./MtSiOt06.js","./BhA9cbh-.js","./BzTkV_ae.js","./CfF041ai.js","./DYgrU1A_.js","./CbqRiykV.js","./CyUslacr.js","./BX62pi2u.js","./CrFATHof.js","./BDvs4WOh.js","./Cp_a6I0H.js","./Gh7WhPjS.js","./D_-GdkeY.js","./CCHKZ8lY.js","./Cr_F5mfY.js","./DB5gPc_3.js","./CL2NbQte.js"])))=>i.map(i=>d[i]);
import{_ as R}from"./DP0V16Nu.js";import{r as d,m as p,a as w,H as L,h as N}from"./B1ITX55D.js";import{s as c,i as a,Y as O,x as k}from"./ByNAQ7iQ.js";import{H as v}from"./BGHOg2OT.js";import{f as x}from"./BPcLLMNQ.js";import{o as F}from"./DwLD0TYM.js";import{d as E}from"./BifNJpTd.js";import{c as b}from"./XEjsAIip.js";import{R as P}from"./DgSUyPYY.js";let y=class extends E.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new c("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};d([p({readOnly:!0})],y.prototype,"connectionError",null),y=d([w("esri.layers.support.StreamConnection")],y);var f;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(f||(f={}));let g=class extends y{constructor(t){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:r,spatialReference:o,sourceSpatialReference:s}=t;this._config=t,this._featureZScaler=F(r,s,o),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case f.CONNECTING:case f.OPEN:return"connected";case f.CLOSING:case f.CLOSED:return"disconnected"}}sendMessageToSocket(t){this._websocket!=null?this._websocket.send(JSON.stringify(t)):this._outstandingMessages.push(t)}sendMessageToClient(t){this._onMessage(t)}updateCustomParameters(t){this._config.customParameters=t,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(t=this._config.source.path,r=1e3,o=0){try{if(this.destroyed)return;const s=v(t,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const n=r/1e3;return this._config.maxReconnectionAttempts&&o>=this._config.maxReconnectionAttempts?(a.getLogger(this).error(new c("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(a.getLogger(this).error(new c("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,s)),await O(r),this._tryCreateWebSocket(t,Math.min(1.5*r,1e3*this._config.maxReconnectionInterval),o+1))}}_setWebSocketJSONParseHandler(t){t.onmessage=r=>{try{const o=JSON.parse(r.data);this._onMessage(o)}catch(o){return void a.getLogger(this).error(new c("websocket-connection","Failed to parse message, invalid JSON",{error:o}))}}}_createWebSocket(t){return new Promise(((r,o)=>{const s=new WebSocket(t);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=n=>this._onClose(n),s.onerror=n=>this._onError(n),this._setWebSocketJSONParseHandler(s),r(s)},s.onclose=n=>{s.onopen=s.onclose=null,o(n)}}))}async _handshake(t=1e4){const r=this._websocket;if(r==null)return;const o=k(),s=r.onmessage,{filter:n,outFields:u,spatialReference:l}=this._config;return o.timeout(t),r.onmessage=h=>{let i=null;try{i=JSON.parse(h.data)}catch{}i&&typeof i=="object"||(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - malformed message",h.data)),o.reject(),this.destroy()),i.spatialReference?.wkid!==l?.wkid&&(a.getLogger(this).error(new c("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,h.data)),o.reject(),this.destroy()),i.format!=="json"&&(a.getLogger(this).error(new c("websocket-connection","Protocol violation. Handshake failed - format is not set",h.data)),o.reject(),this.destroy()),n&&i.filter!==n&&a.getLogger(this).error(new c("websocket-connection","Tried to set filter, but server doesn't support it")),u&&i.outFields!==u&&a.getLogger(this).error(new c("websocket-connection","Tried to set outFields, but server doesn't support it")),r.onmessage=s;for(const m of this._outstandingMessages)r.send(JSON.stringify(m));this._outstandingMessages=[],o.resolve()},r.send(JSON.stringify({filter:n,outFields:u,format:"json",spatialReference:{wkid:l.wkid}})),o.promise}_onMessage(t){if(this.onMessage(t),"type"in t)switch(t.type){case"features":case"featureResult":for(const r of t.features)this._featureZScaler!=null&&this._featureZScaler(r.geometry),this.onFeature(r)}}_onError(t){const r="Encountered an error over WebSocket connection";this._set("errorString",r),a.getLogger(this).error("websocket-connection",r)}_onClose(t){this._websocket=null,this.notifyChange("connectionStatus"),t.code!==1e3&&a.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${t.code}`),this.destroyed||this._open()}};d([p()],g.prototype,"connectionStatus",null),d([p()],g.prototype,"errorString",void 0),g=d([w("esri.layers.graphics.sources.connections.WebSocketConnection")],g);const M=1e4,W={maxQueryDepth:5,maxRecordCountFactor:3};let S=class extends g{constructor(e){super({...W,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||a.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){return void a.getLogger(this).error(new c("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=L(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return v(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return a.getLogger(this).error(new c("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(r==null||e==null&&t==null)return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let s=!1;const n=k(),u=()=>{s||(this.destroyed||this._websocket!==r||a.getLogger(this).error(new c("geoevent-connection","Server timed out when setting filter")),n.reject())},l=h=>{const i=JSON.parse(h.data);i.filter&&(i.error&&(a.getLogger(this).error(new c("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),s=!0,n.resolve())};return r.onmessage=l,r.send(o),setTimeout(u,M),n.promise}_serializeFilter(e,t){const r={};if(e==null&&t==null)return r;if(e?.geometry)try{const o=x(e.geometry);if(o.type!=="extent")throw new c("geoevent-connection",`Expected extent but found type ${o.type}`);r.geometry=JSON.stringify(o.shiftCentralMeridian())}catch(o){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return e?.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],o=this._relatedFeatures.get(r);if(!o)return a.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:s,geometry:n}=o;for(const u in s)e.attributes[u]=s[u];return n&&(e.geometry=n),e.geometry||e.centroid||a.getLogger(this).error(new c("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;const s=await o;if(!s)return;for(const n of s.features)this.onFeature(this._enrich(n))}catch(e){a.getLogger(this).error(new c("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await R(async()=>{const{default:C}=await import("./DPZVGWN8.js");return{default:C}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121]),import.meta.url)).default({url:e}),{capabilities:r}=await t.load(),o=r.query.supportsMaxRecordCountFactor,s=r.query.supportsPagination,n=r.query.supportsCentroid,u=this._config.maxRecordCountFactor,l=t.capabilities.query.maxRecordCount,h=o?l*u:l,i=new P;if(i.outFields=this._config.outFields??["*"],i.where=this._config.filter?.where??"1=1",i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=N.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),o&&(i.maxRecordCountFactor=u),s)return i.num=h,t.destroy(),this._queryPages(e,i);const m=await b(e,i,this._config.sourceSpatialReference);return t.destroy(),m.data}async _queryPages(e,t,r=[],o=0){t.start=t.num!=null?o*t.num:null;const{data:s}=await b(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<(this._config.maxQueryDepth??0)?(s.features.forEach((n=>r.push(n))),this._queryPages(e,t,r,o+1)):(r.forEach((n=>s.features.push(n))),s)}_addRelatedFeatures(e){const t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(const s of r){const n=s.attributes[o];t.set(n,s)}this._relatedFeatures=t}};S=d([w("esri.layers.graphics.sources.connections.GeoEventConnection")],S);let _=class extends y{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._featureZScaler=F(t,o,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};d([p()],_.prototype,"connectionStatus",void 0),d([p()],_.prototype,"errorString",void 0),_=d([w("esri.layers.support.ClientSideConnection")],_);function T(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t),e!=null&&(r.where=e),r}function Z(e,t,r,o,s,n,u,l,h){const i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:T(s,n),maxReconnectionAttempts:u,maxReconnectionInterval:l,customParameters:h};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new g(i):new S(i):new _(i)}export{Z as createConnection};
