import"./DE3--tLW.js";import{i as $,s as x,b as A}from"./Dm941dBC.js";import{s as f}from"./DGjcIG0n.js";import"./w-2V2ENZ.js";import{M as v,I as E}from"./CKPuaBYR.js";import{H as U,ap as F}from"./Dc40Hn7j.js";const j={ar:"ar-u-nu-latn",bs:"sr-Latn-CS",nn:"no-NN"};let w=new WeakMap,B={};function m(t){const e=t||B;if(!w.has(e)){const n=$(),r=x(n)?.language,u=r&&j[r]||n;w.set(e,new Intl.NumberFormat(u,t))}return w.get(e)}function Q(t={}){const e={};return t.digitSeparator!=null&&(e.useGrouping=t.digitSeparator),t.places!=null&&(e.minimumFractionDigits=e.maximumFractionDigits=t.places),e}function V(t,e){return Object.is(t,-0)&&(t=0),m(e).format(t)}function X(t,e=$()){if(!t)return null;let n=_.get(e);if(!n){const r=m().formatToParts(12345.6),u=[...m({useGrouping:!1}).format(9876543210)].reverse(),i=new Map(u.map(((s,a)=>[s,a]))),h=new RegExp(`[${r.find((s=>s.type==="group"))?.value}]`,"g"),p=new RegExp(`[${r.find((s=>s.type==="decimal"))?.value}]`),l=new RegExp(`[${u.join("")}]`,"g"),g=/[\u200E\u200F\u202A\u202B\u202C\u202D\u202E\u2066\u2067\u2068\u2069\u061C]/g,c=/[-\u2212\u2013\u2014\u2015]/g;n=s=>{if((s=s.trim().replaceAll(h,"").replace(p,".").replace(l,(k=>String(i.get(k)))).replaceAll(g,"").replaceAll(c,"-"))==="")return null;const a=Number(s);return isNaN(a)?null:a},_.set(e,n)}return n(t)}A((()=>{w=new WeakMap,B={}}));const _=new Map,N={ar:!0,bg:!0,bs:!0,ca:!0,cs:!0,da:!0,de:!0,el:!0,en:!0,es:!0,et:!0,fi:!0,fr:!0,he:!0,hr:!0,hu:!0,id:!0,it:!0,ja:!0,ko:!0,lt:!0,lv:!0,nb:"no",nl:!0,no:!0,nn:"no",pl:!0,pt:"pt-BR","pt-BR":!0,"pt-PT":!0,ro:!0,ru:!0,sk:!0,sl:!0,sr:!0,sv:!0,th:!0,tr:!0,uk:!0,vi:!0,zh:"zh-CN","zh-CN":!0,"zh-HK":!0,"zh-TW":!0};function z(t){return t in N}function b(t){if(z(t)){const e=N[t];return e===!0?t:e}return null}const d=[],o=new Map;function y(t){for(const e of o.keys())M(t.pattern,e)&&o.delete(e)}function C(t){return d.includes(t)||(y(t),d.unshift(t)),E((()=>{const e=d.indexOf(t);e>-1&&(d.splice(e,1),y(t))}))}async function Y(t){const e=$();o.has(t)||o.set(t,W(t,e));const n=o.get(t);return n&&await T.add(n),n}function S(t){const e=x(t);return e?b(t)??b(e.language):null}async function W(t,e){const n=[];for(const r of d)if(M(r.pattern,t))try{return await r.fetchMessageBundle(t,e)}catch(u){n.push(u)}throw n.length?new f("intl:message-bundle-error",`Errors occurred while loading "${t}"`,{errors:n}):new f("intl:no-message-bundle-loader",`No loader found for message bundle "${t}"`)}function M(t,e){return typeof t=="string"?e.startsWith(t):t.test(e)}A((()=>{o.clear()}));const T=new class{constructor(){this._numLoading=0,this._dfd=null}async waitForAll(){this._dfd&&await this._dfd.promise}add(t){return this._increase(),t.then((()=>this._decrease()),(()=>this._decrease())),this.waitForAll()}_increase(){this._numLoading++,this._dfd||(this._dfd=v())}_decrease(){this._numLoading=Math.max(this._numLoading-1,0),this._dfd&&this._numLoading===0&&(this._dfd.resolve(),this._dfd=null)}};async function D(t,e,n,r){const u=e.exec(n);if(!u)throw new f("esri-intl:invalid-bundle",`Bundle id "${n}" is not compatible with the pattern "${e}"`);const i=u[1]?`${u[1]}/`:"",h=u[2],p=S(r),l=`${i}${h}.json`,g=p?`${i}${h}_${p}.json`:l;let c;try{c=await L(t(g))}catch(s){if(g===l)throw new f("intl:unknown-bundle",`Bundle "${n}" cannot be loaded`,{error:s});try{c=await L(t(l))}catch(a){throw new f("intl:unknown-bundle",`Bundle "${n}" cannot be loaded`,{error:a})}}return c}async function L(t){if(R.fetchBundleAsset!=null)return R.fetchBundleAsset(t);const e=await U(t,{responseType:"text"});return JSON.parse(e.data)}class O{constructor({base:e="",pattern:n,location:r=new URL(window.location.href)}){let u;u=typeof r=="string"?i=>new URL(i,new URL(r,window.location.href)).href:r instanceof URL?i=>new URL(i,r).href:r,this.pattern=typeof n=="string"?new RegExp(`^${n}`):n,this.getAssetUrl=u,e=e?e.endsWith("/")?e:e+"/":"",this.matcher=new RegExp(`^${e}(?:(.*)\\/)?(.*)$`)}fetchMessageBundle(e,n){return D(this.getAssetUrl,this.matcher,e,n)}}function G(t){return new O(t)}const R={};C(G({pattern:"esri/",location:F}));export{Y as f,Q as i,S as m,V as o,X as p};
