import{k as w,r as a,m as n,a as B,ab as S,P as z,v as $,p as T,o as N}from"./iFuBOtDF.js";import{a as h}from"./DHq0rblm.js";import{i as d}from"./BfhsIlKo.js";import{ab as _}from"./D4R7oZu3.js";import{r as C}from"./Bvto7RYj.js";import{e as k,E as M,s as I}from"./DJjT3TTZ.js";import{m as j,v as O,a as L,n as R,y as q}from"./DmDtsNPB.js";import{u as A}from"./DI4pbOfm.js";import{z as P}from"./DUnEJCVc.js";var x;let u=x=class extends w{constructor(e){super(e),this.description=null,this.label=null,this.minValue=null,this.maxValue=0,this.symbol=null}clone(){return new x({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,symbol:this.symbol?.clone()??null})}getMeshHash(){const e=JSON.stringify(this.symbol);return`${this.minValue}.${this.maxValue}.${e}`}};a([n({type:String,json:{write:!0}})],u.prototype,"description",void 0),a([n({type:String,json:{write:!0}})],u.prototype,"label",void 0),a([n({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],u.prototype,"minValue",void 0),a([n({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],u.prototype,"maxValue",void 0),a([n(j)],u.prototype,"symbol",void 0),u=x=a([B("esri.renderers.support.ClassBreakInfo")],u);var v;const V="log",y="percent-of-total",g="field",f=new $({esriNormalizeByLog:V,esriNormalizeByPercentOfTotal:y,esriNormalizeByField:g}),H=z(u);let r=v=class extends O(L){constructor(e){super(e),this._compiledValueExpression={valueExpression:null,compiledFunction:null},this.backgroundFillSymbol=null,this.classBreakInfos=null,this.defaultLabel=null,this.defaultSymbol=null,this.field=null,this.isMaxInclusive=!0,this.legendOptions=null,this.normalizationField=null,this.normalizationTotal=null,this.type="class-breaks",this.valueExpression=null,this.valueExpressionTitle=null,this._set("classBreakInfos",[])}readClassBreakInfos(e,s,t){if(!Array.isArray(e))return;let i=s.minValue;return e.map((l=>{const o=new u;return o.read(l,t),o.minValue==null&&(o.minValue=i),o.maxValue==null&&(o.maxValue=o.minValue),i=o.maxValue,o}))}writeClassBreakInfos(e,s,t,i){const l=e.map((o=>o.write({},i)));this._areClassBreaksConsecutive()&&l.forEach((o=>delete o.classMinValue)),s[t]=l}castField(e){return e==null?e:typeof e=="function"?(d.getLogger(this).error(".field: field must be a string value"),null):S(e)}get minValue(){return this.classBreakInfos&&this.classBreakInfos[0]&&this.classBreakInfos[0].minValue||0}get normalizationType(){let e=this._get("normalizationType");const s=!!this.normalizationField,t=this.normalizationTotal!=null;return s||t?(e=s&&g||t&&y||null,s&&t&&d.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")):e!==g&&e!==y||(e=null),e}set normalizationType(e){this._set("normalizationType",e)}addClassBreakInfo(e,s,t){let i=null;i=typeof e=="number"?new u({minValue:e,maxValue:s,symbol:P(t)}):H(h(e)),this.classBreakInfos.push(i),this.classBreakInfos.length===1&&this.notifyChange("minValue")}removeClassBreakInfo(e,s){const t=this.classBreakInfos.length;for(let i=0;i<t;i++){const l=[this.classBreakInfos[i].minValue,this.classBreakInfos[i].maxValue];if(l[0]===e&&l[1]===s){this.classBreakInfos.splice(i,1);break}}}getBreakIndex(e,s){return this.valueExpression&&s?.arcade==null&&d.getLogger(this).warn(""),this.valueExpression?this._getBreakIndexForExpression(e,s):this._getBreakIndexForField(e)}async getClassBreakInfo(e,s){let t=s;this.valueExpression&&s?.arcade==null&&(t={...t,arcade:await k()});const i=this.getBreakIndex(e,t);return i!==-1?this.classBreakInfos[i]:null}getSymbol(e,s){if(this.valueExpression&&s?.arcade==null)return void d.getLogger(this).error("#getSymbol()","Please use getSymbolAsync if valueExpression is used");const t=this.getBreakIndex(e,s);return t>-1?this.classBreakInfos[t].symbol:this.defaultSymbol}async getSymbolAsync(e,s){let t=s;if(this.valueExpression&&s?.arcade==null){const l=await k(),{arcadeUtils:o}=l;o.hasGeometryOperations(this.valueExpression)&&await o.enableGeometryOperations(),t={...t,arcade:l}}const i=this.getBreakIndex(e,t);return i>-1?this.classBreakInfos[i].symbol:this.defaultSymbol}get symbols(){const e=[];return this.classBreakInfos.forEach((s=>{s.symbol&&e.push(s.symbol)})),this.defaultSymbol&&e.push(this.defaultSymbol),e}getAttributeHash(){return this.visualVariables?.reduce(((e,s)=>e+s.getAttributeHash()),"")??""}getMeshHash(){const e=JSON.stringify(this.backgroundFillSymbol),s=JSON.stringify(this.defaultSymbol),t=`${this.normalizationField}.${this.normalizationType}.${this.normalizationTotal}`;return`${e}.${s}.${this.classBreakInfos.reduce(((i,l)=>i+l.getMeshHash()),"")}.${t}.${this.field}.${this.valueExpression}`}get arcadeRequired(){return this.arcadeRequiredForVisualVariables||!!this.valueExpression}clone(){return new v({field:this.field,backgroundFillSymbol:this.backgroundFillSymbol?.clone(),defaultLabel:this.defaultLabel,defaultSymbol:this.defaultSymbol?.clone(),valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,classBreakInfos:h(this.classBreakInfos),isMaxInclusive:this.isMaxInclusive,normalizationField:this.normalizationField,normalizationTotal:this.normalizationTotal,normalizationType:this.normalizationType,visualVariables:h(this.visualVariables),legendOptions:h(this.legendOptions),authoringInfo:h(this.authoringInfo)})}async collectRequiredFields(e,s){const t=[this.collectVVRequiredFields(e,s),this.collectSymbolFields(e,s)];await Promise.all(t)}async collectSymbolFields(e,s){const t=[...this.symbols.map((i=>i.collectRequiredFields(e,s))),M(e,s,this.valueExpression)];I(e,s,this.field),I(e,s,this.normalizationField),await Promise.all(t)}_getBreakIndexForExpression(e,s){const{viewingMode:t,scale:i,spatialReference:l,arcade:o,timeZone:p}=s??{},{valueExpression:b}=this;let m=this._compiledValueExpression.valueExpression===b?this._compiledValueExpression.compiledFunction:null;const c=o.arcadeUtils;if(!m){const E=c.createSyntaxTree(b);m=c.createFunction(E),this._compiledValueExpression.compiledFunction=m}this._compiledValueExpression.valueExpression=b;const F=c.executeFunction(m,c.createExecContext(e,c.getViewInfo({viewingMode:t,scale:i,spatialReference:l}),p));return this._getBreakIndexfromInfos(F)}_getBreakIndexForField(e){const s=this.field,t=e.attributes,i=this.normalizationType;let l=parseFloat(t[s]);if(i){const o=this.normalizationTotal,p=parseFloat(this.normalizationField?t[this.normalizationField]:void 0);if(i===V)l=Math.log(l)*Math.LOG10E;else if(i!==y||o==null||isNaN(o)){if(i===g&&!isNaN(p)){if(isNaN(l)||isNaN(p))return-1;l/=p}}else l=l/o*100}return this._getBreakIndexfromInfos(l)}_getBreakIndexfromInfos(e){const s=this.isMaxInclusive;if(e!=null&&typeof e=="number"&&!isNaN(e))for(let t=0;t<this.classBreakInfos.length;t++){const i=[this.classBreakInfos[t].minValue,this.classBreakInfos[t].maxValue];if(i[0]<=e&&(s?e<=i[1]:e<i[1]))return t}return-1}_areClassBreaksConsecutive(){const e=this.classBreakInfos,s=e.length;for(let t=1;t<s;t++)if(e[t-1].maxValue!==e[t].minValue)return!1;return!0}};a([n(R)],r.prototype,"backgroundFillSymbol",void 0),a([n({type:[u],json:{write:{isRequired:!0}}})],r.prototype,"classBreakInfos",void 0),a([T("classBreakInfos")],r.prototype,"readClassBreakInfos",null),a([N("classBreakInfos")],r.prototype,"writeClassBreakInfos",null),a([n({type:String,json:{write:!0}})],r.prototype,"defaultLabel",void 0),a([n(q)],r.prototype,"defaultSymbol",void 0),a([n({type:String,json:{write:!0}})],r.prototype,"field",void 0),a([_("field")],r.prototype,"castField",null),a([n({type:Boolean})],r.prototype,"isMaxInclusive",void 0),a([n({type:A,json:{write:!0}})],r.prototype,"legendOptions",void 0),a([n({type:Number,readOnly:!0,value:null,json:{read:!1,write:{overridePolicy(){return this.classBreakInfos.length!==0&&this._areClassBreaksConsecutive()?{enabled:!0}:{enabled:!1}}}}})],r.prototype,"minValue",null),a([n({type:String,json:{write:!0}})],r.prototype,"normalizationField",void 0),a([n({type:Number,json:{write:!0}})],r.prototype,"normalizationTotal",void 0),a([n({type:f.apiValues,value:null,json:{type:f.jsonValues,read:f.read,write:f.write}})],r.prototype,"normalizationType",null),a([C({classBreaks:"class-breaks"})],r.prototype,"type",void 0),a([n({type:String,json:{write:!0}})],r.prototype,"valueExpression",void 0),a([n({type:String,json:{write:!0}})],r.prototype,"valueExpressionTitle",void 0),r=v=a([B("esri.renderers.ClassBreaksRenderer")],r);export{r as j,u as l};
