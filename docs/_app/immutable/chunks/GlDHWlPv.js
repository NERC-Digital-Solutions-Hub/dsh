import{l,h as p,r as c,a as f}from"./Bcg-2HKw.js";import{V as m}from"./B0Ux2NeR.js";import"./DGjcIG0n.js";import"./w-2V2ENZ.js";import{P as n}from"./Dl3KosoA.js";import{L as u,s as h}from"./BTWTCu7M.js";var o;let a=o=class extends l.JSONSupportMixin(m.ofType(n)){constructor(e){super(e)}clone(){return new o(this.items.map((e=>e.clone())))}write(e,r){return this.toJSON(r)}toJSON(e){const r=e?.layer?.spatialReference;return r?this.toArray().map((t=>{if(!r.equals(t.spatialReference)){if(!u(t.spatialReference,r))return e?.messages?.push(new p("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const i=new n;h(t,i,r),t=i}const s=t.toJSON(e);return delete s.spatialReference,s})).filter((t=>t!=null)):this.toArray().map((t=>t.toJSON(e)))}static fromJSON(e,r){const t=new o;return e.forEach((s=>t.add(n.fromJSON(s,r)))),t}};a=o=c([f("esri.layers.support.PolygonCollection")],a);const w=a;export{w as l};
