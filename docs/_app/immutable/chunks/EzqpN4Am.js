import{v as l,L as u,r as e,m as r,H as o,a as d,av as m}from"./CtNvT6K6.js";import{a as y}from"./DvJptieO.js";import{i as c}from"./Bxh34c20.js";import"./ZGrc7RNF.js";import{r as n}from"./hw-Tjhuv.js";import{f as h}from"./AxdB50Uq.js";import{l as f}from"./Pjl4H5sc.js";import{g as a}from"./CB6Au2ls.js";import{m as v,n as w,a as b,b as j,y as g}from"./RaGjYxJd.js";import{p as S,s as $}from"./B-KMbp9-.js";import{u as R}from"./BH0Bspy2.js";import{p as T}from"./Bnjk3Oru.js";const B=new u({asc:"ascending",desc:"descending"}),x={base:g,key:"type",typeMap:{"auto-interval":j,date:b,"fixed-boundaries":w,"fixed-interval":v}};let t=class extends y.ClonableMixin(l){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!T(i)&&c.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};e([r({types:x,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([n(B)],t.prototype,"binOrder",void 0),e([r({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([r({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([r({type:o,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([r({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],t.prototype,"distance",void 0),e([r({types:f,json:{read:h,write:!0}})],t.prototype,"geometry",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([r({type:o,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([r({type:[S],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([r({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,s,p)=>{i&&(s[p]={ianaTimeZone:i})}}}})],t.prototype,"outTimeZone",null),e([r({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([n($,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([r({type:R,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([r({type:String,json:{read:a.read,write:{writer:a.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([r({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([d("esri.rest.support.AttributeBinsQuery")],t),t.from=m(t);export{t as default};
