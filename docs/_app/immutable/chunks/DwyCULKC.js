const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CAwu7uZw.js","./B92kdZ15.js","./CuJjo2fS.js","./CNKkBltG.js","./cj780n54.js","./Ei29lXAh.js","./-Rap9rN9.js","./CkfJ-xIb.js","./qExclXic.js","./DP7_WWTp.js"])))=>i.map(i=>d[i]);
import{_ as i}from"./CkfJ-xIb.js";import{s as a}from"./B92kdZ15.js";import{be as s,bf as m,bg as _}from"./-Rap9rN9.js";let n;function c(){return!!n&&m()}async function y(){if(!c()){const[r,e]=await Promise.all([i(()=>import("./CAwu7uZw.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url),i(()=>import("./CNKkBltG.js").then(t=>t.aV),__vite__mapDeps([3,4,2,5,1,6,7,8,9]),import.meta.url).then((t=>t.aG)).then((({injectPe:t})=>t)),s()]);n=new r.OperatorGeodeticDensifyByLength,e(_)}}function P(r,e,t,o){return n.execute(r,e,t,o,null)}function d(r,e,t,o){const u=n.executeMany(new a(r),e,t,o,null);return Array.from(u)}function h(){return n.supportsCurves()}export{h as a,d as c,y as i,c as s,P as u};
