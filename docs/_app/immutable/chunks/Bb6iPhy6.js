import{P as c,$ as o}from"./CpDu9wAx.js";import{t as p}from"./B5rEBhMq.js";import{l as u,c as g,E as s,u as v}from"./CeBiZl06.js";const y="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",T="imagery-tile-layer-save",I="imagery-tile-layer-save-as",l="WCS",w="wcs-layer-save",x="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:a}=e,r=p(a)[0];return{isValid:r?.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(e){const a=e.layerJSON;return Promise.resolve(a&&Object.keys(a).length?a:null)}async function A(e,a){const{parsedUrl:r,title:t,fullExtent:i}=e;a.url=r.path,a.title||=t;try{a.extent=await u(i)}catch{a.extent=void 0}g(a,s.METADATA),v(a,s.TILED_IMAGERY,e.type==="imagery-tile")}async function h(e,a){const r=e.type==="imagery"?f:e.type==="imagery-tile"?T:w,t=e.type==="wcs"?l:y;return c({layer:e,itemType:t,validateLayer:m,createItemData:n,errorNamePrefix:r},a)}async function D(e,a,r){const t=e.type==="imagery"?d:e.type==="imagery-tile"?I:x,i=e.type==="wcs"?l:y;return o({layer:e,itemType:i,validateLayer:m,createItemData:n,errorNamePrefix:t,newItem:a,setItemProperties:A},r)}export{h as save,D as saveAs};
