import{g as a,s as i}from"./ByNAQ7iQ.js";import{C as s}from"./B1ITX55D.js";import{p as g,n as m}from"./Dpgl8n9v.js";async function f(e=null,t){if(a.geometryServiceUrl)return a.geometryServiceUrl;if(!e)throw new i("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");let r;r="portal"in e?e.portal||s.getDefault():e,await r.load({signal:t});const o=r.helperServices?.geometry?.url;if(!o)throw new i("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");return o}async function v(e,t,r=null,o){const l=await f(r,o),c=new g({geometries:[e],outSpatialReference:t}),n=await m(l,c,{signal:o});if(n&&Array.isArray(n)&&n.length===1)return n[0];throw new i("internal:geometry-service-projection-failed","Geometry projection failed on service")}export{f as getGeometryServiceURL,v as projectGeometry};
