import{s as W}from"./DHq0rblm.js";import{s as _,i as B}from"./BfhsIlKo.js";import{y as F,P as k}from"./BOB_xkBk.js";import{o as q,r as S,i as b,s as U}from"./BdLvjJaM.js";import{aa as C,H as X,n as A,ac as z,S as E}from"./pCx8oau_.js";import{v as D,f as G}from"./BPhm6YV-.js";import{f as K}from"./BaYj2Wow.js";import{I as Q}from"./BgvLO-3W.js";import{r as V,o as Y}from"./DphnWQ0e.js";async function Z(e,n,l,s){const t=K(e),i=n[0].spatialReference,r={...s,responseType:"json",query:{...t.query,f:"json",sr:C(i),target:JSON.stringify({geometryType:D(n[0]),geometries:n}),cutter:JSON.stringify(l)}},o=await X(t.path+"/cut",r),{cutIndexes:f,geometries:a=[]}=o.data;return{cutIndexes:f,geometries:a.map((u=>{const g=G(u);return g.spatialReference=i,g}))}}async function ee(e,n,l){const s=typeof e=="string"?Q(e):e,t=n[0].spatialReference,i=D(n[0]),r={...l,query:{...s.query,f:"json",sr:C(t),geometries:JSON.stringify(V(n))}},{data:o}=await X(s.path+"/simplify",r);return Y(o.geometries,i,t)}const H=()=>B.getLogger("esri.geometry.support.normalizeUtils");function te(e){return e.type==="polygon"}function ne(e){return e[0].type==="polygon"}function se(e){return e[0].type==="polyline"}function J(e){const n=[];let l=0,s=0;for(let t=0;t<e.length;t++){const i=e[t];let r=null;for(let o=0;o<i.length;o++)r=i[o],n.push(r),o===0?(l=r[0],s=l):(l=Math.min(l,r[0]),s=Math.max(s,r[0]));r&&n.push([(l+s)/2,0])}return n}function oe(e,n){if(!(e instanceof F||e instanceof k)){const t="straightLineDensify: the input geometry is neither polyline nor polygon";throw H().error(t),new _("internal:geometry",t)}const l=q(e),s=[];for(const t of l){const i=[];s.push(i),i.push([t[0][0],t[0][1]]);for(let r=0;r<t.length-1;r++){const o=t[r][0],f=t[r][1],a=t[r+1][0],u=t[r+1][1],g=Math.sqrt((a-o)*(a-o)+(u-f)*(u-f)),p=(u-f)/g,d=(a-o)/g,m=g/n;if(m>1){for(let R=1;R<=m-1;R++){const v=R*n,c=d*v+o,h=p*v+f;i.push([c,h])}const w=(g+Math.floor(m-1)*n)/2,P=d*w+o,I=p*w+f;i.push([P,I])}i.push([a,u])}}return te(e)?new k({rings:s,spatialReference:e.spatialReference}):new F({paths:s,spatialReference:e.spatialReference})}function O(e,n,l){if(n){const s=oe(e,1e6);e=E(s,!0)}return l&&(e=U(e,l)),e}function T(e,n,l){if(Array.isArray(e)){const s=e[0];if(s>n){const t=b(s,n);e[0]=s+t*(-2*n)}else if(s<l){const t=b(s,l);e[0]=s+t*(-2*l)}}else{const s=e.x;if(s>n){const t=b(s,n);e=e.clone().offset(t*(-2*n),0)}else if(s<l){const t=b(s,l);e=e.clone().offset(t*(-2*l),0)}}return e}function re(e,n){let l=-1;for(let s=0;s<n.cutIndexes.length;s++){const t=n.cutIndexes[s],i=n.geometries[s],r=q(i);for(let o=0;o<r.length;o++){const f=r[o];f.some((a=>{if(a[0]<180)return!0;{let u=0;for(let p=0;p<f.length;p++){const d=f[p][0];u=d>u?d:u}u=Number(u.toFixed(9));const g=-360*b(u,180);for(let p=0;p<f.length;p++){const d=i.getPoint(o,p);i.setPoint(o,p,d.clone().offset(g,0))}return!0}}))}if(t===l){if(ne(e))for(const o of q(i))e[t]=e[t].addRing(o);else if(se(e))for(const o of q(i))e[t]=e[t].addPath(o)}else l=t,e[t]=i}return e}async function ie(e,n,l){if(!Array.isArray(e))return ie([e],n);n&&typeof n!="string"&&H().warn("normalizeCentralMeridian()","The url object is deprecated, use the url string instead");const s=typeof n=="string"?n:n?.url??W.geometryServiceUrl;let t,i,r,o,f,a,u,g,p=0;const d=[],m=[];for(const c of e)if(c!=null)if(t||(t=c.spatialReference,i=A(t),r=t.isWebMercator,a=r?102100:4326,o=S[a].maxX,f=S[a].minX,u=S[a].plus180Line,g=S[a].minus180Line),i)if(c.type==="mesh")m.push(c);else if(c.type==="point")m.push(T(c.clone(),o,f));else if(c.type==="multipoint"){const h=c.clone();h.points=h.points.map((x=>T(x,o,f))),m.push(h)}else if(c.type==="extent"){const h=c.clone()._normalize(!1,!1,i);m.push(h.rings?new k(h):h)}else if(c.extent){const h=c.extent,x=b(h.xmin,f)*(2*o);let M=x===0?c.clone():U(c.clone(),x);h.offset(x,0);let{xmin:$,xmax:y}=h;$=Number($.toFixed(9)),y=Number(y.toFixed(9)),h.intersects(u)&&y!==o?(p=y>p?y:p,M=O(M,r),d.push(M),m.push("cut")):h.intersects(g)&&$!==f?(p=y*(2*o)>p?y*(2*o):p,M=O(M,r,360),d.push(M),m.push("cut")):m.push(M)}else m.push(c.clone());else m.push(c);else m.push(c);let w=b(p,o),P=-90;const I=w,R=new F;for(;w>0;){const c=360*w-180;R.addPath([[c,P],[c,-1*P]]),P*=-1,w--}if(d.length>0&&I>0){const c=re(d,await Z(s,d,R,l)),h=[],x=[];for(let y=0;y<m.length;y++){const N=m[y];if(N!=="cut")x.push(N);else{const L=c.shift(),j=e[y];j!=null&&j.type==="polygon"&&j.rings&&j.rings.length>1&&L.rings.length>=j.rings.length?(h.push(L),x.push("simplify")):x.push(r?z(L):L)}}if(!h.length)return x;const M=await ee(s,h,l),$=[];for(let y=0;y<x.length;y++){const N=x[y];N!=="simplify"?$.push(N):$.push(r?z(M.shift()):M.shift())}return $}const v=[];for(let c=0;c<m.length;c++){const h=m[c];if(h!=="cut")v.push(h);else{const x=d.shift();v.push(r===!0?z(x):x)}}return v}function ye(e){if(!e)return null;const n=e.extent;if(!n)return null;const l=e.spatialReference&&A(e.spatialReference);if(!l)return n;const[s,t]=l.valid,i=2*t,{width:r}=n;let o,{xmin:f,xmax:a}=n;if([f,a]=[a,f],e.type==="extent"||r===0||r<=t||r>i||f<s||a>t)return n;switch(e.type){case"polygon":if(!(e.rings.length>1))return n;o=J(e.rings);break;case"polyline":if(!(e.paths.length>1))return n;o=J(e.paths);break;case"multipoint":o=e.points}const u=n.clone();for(let g=0;g<o.length;g++){let p=o[g][0];p<0?(p+=t,a=Math.max(p,a)):(p-=t,f=Math.min(p,f))}return u.xmin=f,u.xmax=a,u.width<r?(u.xmin-=t,u.xmax-=t,u):n}function xe(e,n,l){const s=A(l);if(s==null)return e;const[t,i]=s.valid,r=2*i;let o=0,f=0;n>i?o=Math.ceil(Math.abs(n-i)/r):n<t&&(o=-Math.ceil(Math.abs(n-t)/r)),e>i?f=Math.ceil(Math.abs(e-i)/r):e<t&&(f=-Math.ceil(Math.abs(e-t)/r));let a=e+(o-f)*r;const u=a-n;return u>i?a-=r:u<t&&(a+=r),a}function de(e,n){const l=A(n);if(l){const[s,t]=l.valid,i=t-s;if(e<s)for(;e<s;)e+=i;if(e>t)for(;e>t;)e-=i}return e}export{de as L,oe as M,xe as P,ie as R,ye as v};
