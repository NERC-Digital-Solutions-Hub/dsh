const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./RNHiVu1X.js","./BIqjA6jd.js","./DdViISjG.js","./4kudGrBO.js","./JHpxLPrE.js","./B92kdZ15.js","./pxOq9-g3.js","./B00-F4X4.js","./BgaEKdqI.js","./CSRfKCc0.js","./CgU_ym0P.js","./DP7_WWTp.js","./BNOsMSqR.js","./DIgB1jXc.js","./DeL9NMRZ.js","./m1TUvNfd.js","./DeUoQT-0.js","./DUUPKe3g.js","./CGhCQqYV.js","./C-9DuVCR.js","./CiFwWynd.js","./C194Gm3E.js","./B_Jr_xe7.js","./lOB3WE4Z.js","./BonuAkQB.js","./DWXIZo_3.js","./DA7hSIBy.js","./DRcghms0.js","./moUGjdqC.js","./D-D89Fgs.js","./CDXBOVfW.js","./CX5hHsrx.js","./DCi5iaEZ.js","./DNDkOxX7.js","./R3FTaR9b.js","./WejcYmuu.js","./BkWe9mzC.js","./r77hzg9W.js","./DtATlDem.js","./2QH-nypr.js","./CxcZJzfM.js","./CRx0_1Ns.js","./CirnHLSB.js","./CJam09al.js","./00P3_oXh.js","./Q1laTRjE.js","./BQQEqmwc.js","./tAXIKZtD.js","./CLC2p5oX.js","./Bzz5nYYQ.js","./C0dQjEPD.js","./Bl02dt8L.js","./BEaAVIdv.js","./DdcyScB9.js","./BclYt87N.js","./DW964Hxk.js","./DMMYW9ld.js","./cEzHA9FW.js","./aUjMk3vB.js","./qXjlUsY5.js","./ClEoLYY7.js","./9patZ0WH.js","./BBh3eWaS.js","./fdJWK2u_.js","./BrvKszYO.js","./D0UiFx0n.js","./CqHZreh2.js","./Cq9k39fb.js","./CaqBLtD5.js","./BdXTCUkk.js","./psDLtlfG.js"])))=>i.map(i=>d[i]);
import{_ as i}from"./B00-F4X4.js";import{f as c}from"./icSJj-JY.js";function _(t,e){let o;return{loaded:!1,load:()=>o??=e().then((r=>{p[t]={loaded:!0,execute:r}}))}}function m(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",(()=>i(()=>import("./RNHiVu1X.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),intersects:_("intersects",(()=>i(()=>import("./DIgB1jXc.js"),__vite__mapDeps([13,14,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),touches:_("touches",(()=>i(()=>import("./m1TUvNfd.js"),__vite__mapDeps([15,16,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),crosses:_("crosses",(()=>i(()=>import("./DUUPKe3g.js"),__vite__mapDeps([17,18,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),within:_("within",(()=>i(()=>import("./C-9DuVCR.js"),__vite__mapDeps([19,20,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),contains:_("contains",(()=>i(()=>import("./C194Gm3E.js"),__vite__mapDeps([21,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),overlaps:_("overlaps",(()=>i(()=>import("./B_Jr_xe7.js"),__vite__mapDeps([22,23,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),equals:_("equals",(async()=>{const t=await i(()=>import("./BonuAkQB.js").then(e=>e.e),__vite__mapDeps([24,1,2,3,4,5,6,7,8,9,10,11,25,26,27,28,12]),import.meta.url);return(e,o)=>t.execute(c(e),c(o))})),relate:_("relate",(async()=>{const t=await i(()=>import("./D-D89Fgs.js").then(e=>e.r),__vite__mapDeps([29,1,2,3,4,5,6,7,8,9,10,11,25,26,27,28,12]),import.meta.url);return(e,o,r)=>t.execute(c(e),c(o),r)})),intersection:_("intersection",(()=>i(()=>import("./CDXBOVfW.js"),__vite__mapDeps([30,9,31,5,3,1,2,4,6,7,8,10,11,12]),import.meta.url).then((t=>t.execute)))),union:_("union",(()=>i(()=>import("./DCi5iaEZ.js"),__vite__mapDeps([32,33,5,3,1,2,4,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.executeMany)))),difference:_("difference",(async()=>{const t=await i(()=>import("./R3FTaR9b.js").then(e=>e.d),__vite__mapDeps([34,3,1,2,4,5,6,7,8,9,10,11,26,27,28,12,25]),import.meta.url);return(e,o)=>m(t.execute(c(e),c(o)))})),symmetricDifference:_("symmetricDifference",(async()=>{const t=await i(()=>import("./WejcYmuu.js").then(e=>e.s),__vite__mapDeps([35,9,3,1,2,4,5,6,7,8,10,11,26,27,28,12,25]),import.meta.url);return(e,o)=>m(t.execute(c(e),c(o)))})),clip:_("clip",(async()=>{const t=await i(()=>import("./BkWe9mzC.js").then(e=>e.c),__vite__mapDeps([36,3,1,2,4,5,6,7,8,9,10,11,26,27,28,12,25]),import.meta.url);return(e,o)=>m(t.execute(c(e),c(o)))})),cut:_("cut",(async()=>{const t=await i(()=>import("./r77hzg9W.js").then(e=>e.c),__vite__mapDeps([37,9,3,1,2,4,5,6,7,8,10,11,26,27,28,12,25]),import.meta.url);return(e,o)=>t.execute(c(e),c(o)).map((r=>m(r)))})),area:_("area",(async()=>{const t=await i(()=>import("./DtATlDem.js").then(r=>r.a),__vite__mapDeps([38,6,7,8,9,10,3,2,1,4,5,11,26,27,28,12,25]),import.meta.url),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:r,toAreaUnit:n}=await import("./2QH-nypr.js");return{convertFromSpatialReferenceUnit:r,toAreaUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n)=>{const a=t.execute(c(r));return e(r.spatialReference,o(n),a)}})),geodeticArea:_("geodeticArea",(async()=>{const t=await i(()=>import("./CRx0_1Ns.js").then(n=>n.g),__vite__mapDeps([41,6,7,8,9,10,42]),import.meta.url),{convert:e,squareMeters:o,toAreaUnit:r}=await i(async()=>{const{convert:n,squareMeters:a,toAreaUnit:u}=await import("./2QH-nypr.js");return{convert:n,squareMeters:a,toAreaUnit:u}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return await t.load(),(n,a,u)=>{const s=t.execute(c(n),{curveType:u});return e(o,r(a),s)}})),length:_("length",(async()=>{const t=await i(()=>import("./CJam09al.js"),__vite__mapDeps([43,6,7,8,9,10,12,3,1,2,4,5,11]),import.meta.url),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:r,toLengthUnit:n}=await import("./2QH-nypr.js");return{convertFromSpatialReferenceUnit:r,toLengthUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n)=>{const a=t.execute(r);return e(r.spatialReference,o(n),a)}})),geodeticLength:_("geodeticLength",(async()=>{const t=await i(()=>import("./00P3_oXh.js").then(n=>n.g),__vite__mapDeps([44,6,7,8,9,10,42]),import.meta.url),{convert:e,meters:o,toLengthUnit:r}=await i(async()=>{const{convert:n,meters:a,toLengthUnit:u}=await import("./2QH-nypr.js");return{convert:n,meters:a,toLengthUnit:u}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return await t.load(),(n,a,u)=>{const s=t.execute(c(n),{curveType:u});return e(o,r(a),s)}})),distance:_("distance",(async()=>{const t=await i(()=>import("./Q1laTRjE.js").then(r=>r.d),__vite__mapDeps([45,3,6,7,8,9,10,1,2,4,5,11,25,26,27,28,12]),import.meta.url),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertFromSpatialReferenceUnit:r,toLengthUnit:n}=await import("./2QH-nypr.js");return{convertFromSpatialReferenceUnit:r,toLengthUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n,a)=>{const u=t.execute(c(r),c(n));return e(r.spatialReference,o(a),u)}})),densify:_("densify",(async()=>{const t=await i(()=>import("./BQQEqmwc.js").then(r=>r.d),__vite__mapDeps([46,9,26,6,7,8,10,27,28,3,1,2,4,5,11,12,25]),import.meta.url),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:r,toLengthUnit:n}=await import("./2QH-nypr.js");return{convertToSpatialReferenceUnit:r,toLengthUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n,a)=>(n=e(o(a),r.spatialReference,n),m(t.execute(c(r),n)))})),geodeticDensify:_("geodeticDensify",(async()=>{const t=await i(()=>import("./tAXIKZtD.js").then(n=>n.a),__vite__mapDeps([47,6,7,8,9,10,48,5,42]),import.meta.url),{convert:e,meters:o,toLengthUnit:r}=await i(async()=>{const{convert:n,meters:a,toLengthUnit:u}=await import("./2QH-nypr.js");return{convert:n,meters:a,toLengthUnit:u}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return await t.load(),(n,a,u,s)=>(a=e(r(u),o,a),m(t.execute(c(n),a,{curveType:s})))})),generalize:_("generalize",(async()=>{const t=await i(()=>import("./Bzz5nYYQ.js").then(r=>r.g),__vite__mapDeps([49,9,6,7,8,10,3,1,2,4,5,11,26,27,28,12,50,25]),import.meta.url),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:r,toLengthUnit:n}=await import("./2QH-nypr.js");return{convertToSpatialReferenceUnit:r,toLengthUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n,a,u)=>(n=e(o(a),r.spatialReference,n),m(t.execute(c(r),n,u)))})),buffer:_("buffer",(async()=>{const t=await i(()=>import("./Bl02dt8L.js"),__vite__mapDeps([51,9,6,7,8,10,52,5,3,1,2,4,11,53,54,50,12]),import.meta.url),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:r,toLengthUnit:n}=await import("./2QH-nypr.js");return{convertToSpatialReferenceUnit:r,toLengthUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n,a)=>(n=e(o(a),r.spatialReference,n),t.execute(r,n))})),geodesicBuffer:_("geodesicBuffer",(async()=>{const t=await i(()=>import("./DW964Hxk.js"),__vite__mapDeps([55,7,8,9,6,10,56,5,42]),import.meta.url),{convert:e,meters:o,toLengthUnit:r}=await i(async()=>{const{convert:n,meters:a,toLengthUnit:u}=await import("./2QH-nypr.js");return{convert:n,meters:a,toLengthUnit:u}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return await t.load(),(n,a,u,s)=>(a=e(r(u),o,a),t.execute(n,a,{curveType:s}))})),offset:_("offset",(async()=>{const t=await i(()=>import("./cEzHA9FW.js"),__vite__mapDeps([57,9,6,7,8,10,58,5,1,2,3,4,11,12]),import.meta.url),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await i(async()=>{const{convertToSpatialReferenceUnit:r,toLengthUnit:n}=await import("./2QH-nypr.js");return{convertToSpatialReferenceUnit:r,toLengthUnit:n}},__vite__mapDeps([39,40,10,9,6,7,8]),import.meta.url);return(r,n,a,u)=>(n=e(o(a),r.spatialReference,n),t.execute(r,n,u))})),rotate:_("rotate",(async()=>{const t=await i(()=>import("./qXjlUsY5.js"),__vite__mapDeps([59,9,5,3,25,2,1,4,6,7,8,10,11,26,27,28,12]),import.meta.url),{default:e}=await i(async()=>{const{default:o}=await import("./ClEoLYY7.js");return{default:o}},__vite__mapDeps([60,3,4,26,6,7,8,9,10,27,28]),import.meta.url);return(o,r,n,a)=>{const u=new e().rotate(r,n,a);return m(t.execute(c(o),u))}})),centroid:_("centroid",(async()=>{const t=await i(()=>import("./9patZ0WH.js").then(e=>e.c),__vite__mapDeps([61,62,3,25,2,1,4,5,6,7,8,9,10,11,26,27,28,12]),import.meta.url);return e=>m(t.execute(c(e)))})),labelPoint:_("labelPoint",(async()=>{const t=await i(()=>import("./fdJWK2u_.js").then(e=>e.l),__vite__mapDeps([63,3,1,2,4,5,6,7,8,9,10,11,26,27,28,12,62,64,25]),import.meta.url);return e=>m(t.execute(c(e)))})),simplify:_("simplify",(()=>i(()=>import("./D0UiFx0n.js"),__vite__mapDeps([65,66,5,3,1,2,4,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),isSelfIntersecting:_("isSelfIntersecting",(async()=>{const{NonSimpleResult:t}=await i(()=>import("./DP7_WWTp.js"),[],import.meta.url),e=await i(()=>import("./Cq9k39fb.js"),__vite__mapDeps([67,5,54,3,1,2,4,6,7,8,9,10,11,25,26,27,28,12]),import.meta.url),o=new Set([5,6,7,10,11,12]);return r=>{const n=new t;return!e.isSimple(c(r),n)&&o.has(n.m_reason)}})),isSimple:_("isSimple",(()=>i(()=>import("./D0UiFx0n.js"),__vite__mapDeps([65,66,5,3,1,2,4,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.isSimple)))),convexHull:_("convexHull",(()=>i(()=>import("./CaqBLtD5.js"),__vite__mapDeps([68,69,5,3,1,2,4,6,7,8,9,10,11,12]),import.meta.url).then((t=>t.execute)))),getNearestCoordinate:_("getNearestCoordinate",(async()=>{const t=await i(()=>import("./psDLtlfG.js").then(e=>e.p),__vite__mapDeps([70,3,2,1,4,5,6,7,8,9,10,11,26,27,28,12,64,25]),import.meta.url);return(e,o,r)=>{const n=t.getNearestCoordinate(c(e),c(o),r);return{...n,coordinate:m(n.coordinate)}}})),getNearestVertex:_("getNearestVertex",(async()=>{const t=await i(()=>import("./psDLtlfG.js").then(e=>e.p),__vite__mapDeps([70,3,2,1,4,5,6,7,8,9,10,11,26,27,28,12,64,25]),import.meta.url);return(e,o)=>{const r=t.getNearestVertex(c(e),c(o));return{...r,coordinate:m(r.coordinate)}}}))};function l(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then((()=>l(t,e)))}export{l as invokeGeometryOp};
