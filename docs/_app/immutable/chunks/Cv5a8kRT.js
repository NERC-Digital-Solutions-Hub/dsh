import{x as u,a0 as w,I as n,ag as y,a as c,m as f,b as I}from"./DX5R6uCF.js";import{a as T}from"./K0pwTKFC.js";import"./C6k8CR_f.js";import{c as V}from"./CbjfWF5j.js";import"./KMFh-uuf.js";import"./BS3H3l-F.js";import"./DCdj6Lab.js";import"./B5gVGmlz.js";import"./CyrTv1RS.js";import"./CASyCajO.js";import"./BXRt6Vc2.js";import"./6g5wBlls.js";import"./BEO8P4aF.js";import"./CaVKkSa6.js";import"./DdSZDW6B.js";import"./DkSzwV8v.js";import"./CXNE26Qa.js";import"./zQYKJ5V3.js";import{h as H,p as v,r as C}from"./D48ZHe1M.js";import"./Bm-gqKay.js";import"./BiphejqT.js";import"./SxrJqaXc.js";import"./Cq9226rc.js";import{c as q}from"./DG0mXvLh.js";import"./Caw2WRyS.js";import"./BwsikM5h.js";import"./BdcF8-aA.js";import"./Dxd4x-aa.js";import"./pk2C5RYg.js";import"./BH9DSjzl.js";import"./D01Zrs0b.js";import"./CqeMUCLQ.js";import"./BkxitHk7.js";import"./BFLErLYb.js";import"./WL9WOUbB.js";import"./C_X0rRQS.js";import"./Du5XwpGz.js";import"./BxGktOks.js";import"./8YOoqft9.js";import"./Cj7KC756.js";import"./ymlM9lKK.js";import{O as U}from"./BER4DF4Q.js";import"./D9gy186-.js";import"./WCVSSNPR.js";import"./D-aab9SO.js";import"./WWbVrxJF.js";import"./BUa0HnGO.js";import{r as b,o as p,n as d}from"./C7GRn-Fv.js";import{S as P,u as Q}from"./DQ2YQXOa.js";import{a as S}from"./Fjidj_Wp.js";import{e as _}from"./DEzEwAmB.js";import{i as G}from"./BJmtJdEo.js";import{_ as L,P as k,i as F}from"./DUcOsMpj.js";import{r as z}from"./DaZZ1egP.js";import{g as E}from"./69UU6abV.js";const W=[0,0];let l=class extends G(b(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>e.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return u();const h=i?.name??q;return this._addHighlightGraphics(e,h),u((()=>!this.destroyed&&this._removeHighlightGraphics(e,h)))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map((e=>e.uid)),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((e=>e.uid)),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return w(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t))))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",(()=>t.destroy())),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(s){if(n(s))throw s;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new _(r),o=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return d(this._tileInfoView,o,a,t)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:s=0}=i,r=new _(0,0,0,0);let a,o=null;try{if(o=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await y(i),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&o==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...i,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?d(this._tileInfoView,a,r,t):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(()=>this.requestUpdate()))}catch(i){n(i)||T.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([f()],l.prototype,"resampling",null),c([f()],l.prototype,"tilemapCache",null),l=c([I("esri.views.2d.layers.TileLayerView2D")],l);const At=l;export{At as default};
