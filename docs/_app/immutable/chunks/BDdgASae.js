const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CuBBWuXO.js","./CuJjo2fS.js","./CNKkBltG.js","./cj780n54.js","./Ei29lXAh.js","./B92kdZ15.js","./-Rap9rN9.js","./CkfJ-xIb.js","./qExclXic.js","./DP7_WWTp.js"])))=>i.map(i=>d[i]);
import{_}from"./CkfJ-xIb.js";import{ar as m,L as d}from"./-Rap9rN9.js";import{i as v,c as x,u as g,s as G}from"./D94cD69P.js";import{e as l}from"./CirnHLSB.js";let c,y,f;function N(){return!!c&&G()}async function E(){if(!N()){const[t]=await Promise.all([_(()=>import("./CuBBWuXO.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url),g()]);c=t.fromGeometries,y=t.fromGeometry,f=t.toGeometry}}function R(t,r,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,unit:a}=s;a&&(r=m(r,a,"meters"),e&&(e=m(e,a,"meters")));const o=y(t),i=o.getSpatialReference();return f(v(o.getGeometry(),i,l[n],r,e),i)}function $(t,r,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,union:a=!1,unit:o}=s;o&&(r=r.map((u=>m(u,o,"meters"))),e&&(e=m(e,o,"meters")));const[i,p]=c(t);return x(i,p,l[n],r,e,a).map((u=>f(u,p))).filter(d)}export{R as execute,$ as executeMany,N as isLoaded,E as load};
