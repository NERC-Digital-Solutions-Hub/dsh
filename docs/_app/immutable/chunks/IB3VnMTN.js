const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CjPkjWFX.js","./B92kdZ15.js","./D8BVORXE.js","./RmT53pld.js","./CNWikeC0.js","./K5Ig1cdM.js","./CKPuaBYR.js","./w-2V2ENZ.js","./DGjcIG0n.js","./DP7_WWTp.js"])))=>i.map(i=>d[i]);
import{_ as i}from"./D9Z9MdNV.js";import{s as a}from"./B92kdZ15.js";import{D as s,E as m,F as _}from"./CInk37WK.js";let n;function c(){return!!n&&_()}async function y(){if(!c()){const[r,e]=await Promise.all([i(()=>import("./CjPkjWFX.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url),i(()=>import("./RmT53pld.js").then(t=>t.aV),__vite__mapDeps([3,4,2,5,1,6,7,8,9]),import.meta.url).then((t=>t.aG)).then((({injectPe:t})=>t)),s()]);n=new r.OperatorGeodeticDensifyByLength,e(m)}}function E(r,e,t,o){return n.execute(r,e,t,o,null)}function P(r,e,t,o){const u=n.executeMany(new a(r),e,t,o,null);return Array.from(u)}function d(){return n.supportsCurves()}export{d as a,P as c,y as i,c as s,E as u};
