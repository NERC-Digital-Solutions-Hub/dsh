import{r as t,m as o,c as h,a as y,l,o as j,H as w}from"./B1ITX55D.js";import{f as O,u as S,s as g}from"./DNbaxGlK.js";import"./ByNAQ7iQ.js";import{t as x}from"./CCRg0whm.js";let s=class extends l{constructor(i){super(i),this.error=null,this.geometry=null,this.name=null}};t([o({type:Object})],s.prototype,"error",void 0),t([o({type:h})],s.prototype,"geometry",void 0),t([o({type:String})],s.prototype,"name",void 0),s=t([y("esri.rest.networks.circuits.support.CircuitVerifyResult")],s);const u=s;let r=class extends l{constructor(e){super(e),this.circuits=[],this.moment=null,this.exceededTransferLimit=!1,this.serviceEdits=null}readServiceEdits(e,c){return x(e)}};t([o({type:[u],json:{type:[u],write:!0}})],r.prototype,"circuits",void 0),t([o({type:Date,json:{type:Number,write:{writer:(i,e)=>{e.moment=i?i.getTime():null}}}})],r.prototype,"moment",void 0),t([o({type:Boolean,json:{type:Boolean,write:!0}})],r.prototype,"exceededTransferLimit",void 0),t([o({type:[Object],json:{type:[Object],write:!0}})],r.prototype,"serviceEdits",void 0),t([j("serviceEdits")],r.prototype,"readServiceEdits",null),r=t([y("esri.rest.networks.circuits.support.VerifyCircuitsResult")],r);async function J(i,e,c){const p=O(i),n=e.toJSON();e.circuits&&(n.circuits=JSON.stringify(e.circuits));const m={...n,f:"json"},a=S({...p.query,...m}),d=g(a,{...c,method:"post"}),f=`${p.path}/circuits/verify`,{data:v}=await w(f,d);return r.fromJSON(v)}export{J as verifyCircuits};
