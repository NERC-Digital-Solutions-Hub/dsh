const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./Dxa0kWX3.js","./SRdb46GZ.js","./DGjcIG0n.js","./w-2V2ENZ.js","./C3hpUfwZ.js","./C0wm8_Yw.js","./B0qLHwdt.js","./D9Z9MdNV.js","./CKPuaBYR.js","./CInk37WK.js","./BBGELVfD.js","./Dm941dBC.js","./CL7vXgR2.js","./BmUHNJWP.js","./BEtcpBDE.js","./CNijnAeP.js","./D8t6YHTB.js","./BvgbCAFv.js","./D6KPPgz5.js","./Cjx2F9Ds.js","./D90a-UoA.js","./C6_pfFWS.js","./DE3--tLW.js"])))=>i.map(i=>d[i]);
import{_ as w}from"./D9Z9MdNV.js";import{K as O,d as $,G as v,$ as f,c as _,r as i,m as n,o as E,b as P,a as T,D as A}from"./CKPuaBYR.js";import{a8 as L,H as g,z as F}from"./CInk37WK.js";import{s as b}from"./DGjcIG0n.js";import{t as M}from"./CCvPy2fM.js";import{S as R}from"./DcTGm81B.js";import"./w-2V2ENZ.js";import{i as j}from"./D1qUMsxF.js";import{h as V,u as N}from"./WkIQChO6.js";import{i as J}from"./C2SSoHeS.js";import{m as U,f as q,a as k}from"./BZz7GOvg.js";import{l as z}from"./DAJsxU5z.js";import{p as D}from"./DMYGUuRw.js";import{e as G}from"./CXlOSIUB.js";import{b as W,y as H}from"./D-pA6xvz.js";import{j as K}from"./COrOErwf.js";import{f as Z}from"./Qt6JCLST.js";import{t as B}from"./B_ZG5ntY.js";import{c as C}from"./DbSS6pRl.js";import{y as Q}from"./CQkENb2y.js";import{t as X}from"./CnpzvI3T.js";import{e as S}from"./J7fBfmsn.js";import{t as Y}from"./Dyz97u5R.js";import{c as ee}from"./DqiAQ2UU.js";import{a as x}from"./BDvScnYe.js";import{A as y}from"./CL2NbQte.js";let r=class extends D(C(B(U(q(z(W(K(R(Z(J(G(V)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new Q({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new ee({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=O((async(t,l,s)=>{const{save:p,saveAs:o}=await w(()=>import("./Dxa0kWX3.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),import.meta.url);switch(t){case y.SAVE:return p(this,l);case y.SAVE_AS:return o(this,s,l)}}))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch($).then((()=>this._fetchService(t)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){const l=t.supportedImageFormatTypes;return l&&l.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,l,s){if(!this.loaded||!e)return;const p=e.slice().reverse().flatten((({sublayers:a})=>a&&a.toArray().reverse())).toArray();let o=!1;const m=v(s.origin);let u;if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(m===f.PORTAL_ITEM){const a=this.createSublayersForOrigin("service").sublayers;o=S(p,a,f.SERVICE)}else if(m>f.PORTAL_ITEM){const a=this.createSublayersForOrigin("portal-item");o=S(p,a.sublayers,v(a.origin)),u=a.originWithPartialOverrides}}const d=[],c={writeSublayerStructure:o,...s,minimumWritableOrigin:u};let h=o||this.hasVisibleLayersForOrigin(m);p.forEach((a=>{const I=a.write({},c);d.push(I),h=h||a.originOf("visible")==="user"})),d.some((a=>Object.keys(a).length>1))&&(t.layers=d),h&&(t.visibleLayers=p.filter((a=>a.visible)).map((a=>a.id)))}createExportImageParameters(e,t,l,s){const p=s?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=s?.floors??null,this._exportImageParameters.scale=j({extent:e,width:t})*p;const o=this._exportImageParameters.toJSON(),m=!s?.rotation||this.version<10.3?{}:{rotation:-s.rotation},u=e?.spatialReference,d=L(u);o.dpi*=p;const c={};if(s?.timeExtent){const{start:h,end:a}=s.timeExtent.toJSON();c.time=h&&a&&h===a?""+h:`${h??"null"},${a??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:d,imageSR:d,size:t+","+l,...o,...m,...c}}async fetchImage(e,t,l,s){const{data:p}=await this._fetchImage("image",e,t,l,s);return p}async fetchImageBitmap(e,t,l,s){const{data:p,url:o}=await this._fetchImage("blob",e,t,l,s);return X(p,o,s?.signal)}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:l}=await g(this.url,t),{extent:s,fullExtent:p,timeExtent:o}=l,m=s||p;return{fullExtent:m&&F.fromJSON(m),timeExtent:o&&N.fromJSON({start:o[0],end:o[1]})}}loadAll(){return M(this,(e=>{e(this.allSublayers),e(this.subtables)}))}async save(e){return this._debouncedSaveOperations(y.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(y.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return Y(this,e)}async _fetchImage(e,t,l,s,p){const o={responseType:e,signal:p?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,l,s,p),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},m=this.parsedUrl.path+"/export";if(o.query?.dynamicLayers!=null&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:o.query});try{const{data:u}=await g(m,o);return{data:u,url:m}}catch(u){throw _(u)?u:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:u})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:l}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});l&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(e==null||!this.sublayersSourceJSON[e]?.visibleLayers)}};i([n(x("dateFieldsTimeReference"))],r.prototype,"dateFieldsTimeZone",void 0),i([n({type:Boolean})],r.prototype,"datesInUnknownTimezone",void 0),i([n()],r.prototype,"dpi",void 0),i([n()],r.prototype,"elevationInfo",void 0),i([n()],r.prototype,"gdbVersion",void 0),i([n()],r.prototype,"imageFormat",void 0),i([E("imageFormat",["supportedImageFormatTypes"])],r.prototype,"readImageFormat",null),i([n({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],r.prototype,"imageMaxHeight",void 0),i([n({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],r.prototype,"imageMaxWidth",void 0),i([n()],r.prototype,"imageTransparency",void 0),i([n({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],r.prototype,"isReference",void 0),i([n({json:{read:!1,write:!1}})],r.prototype,"labelsVisible",void 0),i([n({type:["ArcGISMapServiceLayer"]})],r.prototype,"operationalLayerType",void 0),i([n({json:{read:!1,write:!1}})],r.prototype,"popupEnabled",void 0),i([n(x("preferredTimeReference"))],r.prototype,"preferredTimeZone",void 0),i([n()],r.prototype,"sourceJSON",void 0),i([n({json:{write:{ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),i([P("sublayers",{layers:{type:[k]},visibleLayers:{type:[A]}})],r.prototype,"writeSublayers",null),i([n({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],r.prototype,"listMode",void 0),i([n({json:{read:!1},readOnly:!0,value:"map-image"})],r.prototype,"type",void 0),i([n(H)],r.prototype,"url",void 0),r=i([T("esri.layers.MapImageLayer")],r);const Ee=r;export{Ee as default};
