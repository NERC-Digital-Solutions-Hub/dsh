import{f as l}from"./X7dkXTy5.js";import{H as y,ba as f,s as c}from"./Bqd_gqra.js";import{I as S,V as p}from"./CgU_ym0P.js";import{v as R}from"./DnBnwCMo.js";import{R as g}from"./DYLesDE2.js";import{t as d}from"./DVAjIOZN.js";import{i as x}from"./Bi5glz8Z.js";import J from"./DziJsVPE.js";function N(n){const e=n.geometry,i=n.toJSON(),t=i;let o,r,a;if(e!=null&&(r=e.spatialReference,a=f(r),t.geometryType=R(e),t.geometry=JSON.stringify(e),t.inSR=a),i.outSR?(t.outSR=f(i.outSR),o=n.outSpatialReference):e&&(t.outSR=t.inSR,o=r),t.bin&&=JSON.stringify(t.bin),t.quantizationParameters&&=JSON.stringify(t.quantizationParameters),t.outStatistics&&=JSON.stringify(t.outStatistics),t.outTimeReference&&=JSON.stringify(t.outTimeReference),i.timeExtent){const m=i.timeExtent,{start:u,end:s}=m;u==null&&s==null||(t.time=u===s?u:`${u??"null"},${s??"null"}`),delete i.timeExtent}return n.defaultSpatialReference&&c(r,o)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function O(n,e,i){return e.timeExtent!=null&&e.timeExtent.isEmpty?{data:{features:[]}}:await q(n,e,i)}async function q(n,e,i={}){const t=typeof n=="string"?S(n):n,o=e.geometry?[e.geometry]:[],r=await g(o,null,{signal:i.signal}),a=r?.[0];a!=null&&((e=e.clone()).geometry=a);const m=d({...t.query,f:"json",...N(e)});return y(p(t.path,"queryBins"),{...i,query:{...m,...i.query}})}async function P(n,e,i){const{data:t}=await O(l(n),J.from(e),i);return x.fromJSON(t)}export{P as executeAttributeBinsQuery};
