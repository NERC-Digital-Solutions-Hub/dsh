const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CXidMiO-.js","./CSRfKCc0.js","./CgU_ym0P.js","./CcFT35nQ.js","./Bqd_gqra.js","./CIQQjfB5.js","./BAcBkKCc.js","./DWPPkjmw.js","./DtlFgwmP.js","./M0JgZTHi.js","./CCE8QAE8.js","./Djp3mnm5.js","./ByrI9egR.js","./D2dZROTq.js","./DQOJ18NT.js","./D0Se3yGq.js"])))=>i.map(i=>d[i]);
import{_ as m}from"./CIQQjfB5.js";import{g as y,r as a,m as n,a as g}from"./Bqd_gqra.js";import{L as x}from"./CSRfKCc0.js";import{d as I,V as _}from"./DtlFgwmP.js";import"./CgU_ym0P.js";import{e as b,k as T,X as F}from"./DWPPkjmw.js";const v="relationships/",k="expression/";let r=class extends y{constructor(e){super(e),this._featureUtils=null,this.effectivePopupTemplate=null}get _arcadeTask(){return this.expressionsUsedInTitle.length>0?this._get("_arcadeTask")||I((()=>b())):null}get featureUtilsPromise(){return this._get("featureUtilsPromise")??m(()=>import("./CXidMiO-.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]),import.meta.url).then((e=>this._featureUtils=e))}get calculatedExpressions(){const e=new _;if(!this.expressionsUsedInTitle.length)return e;if(!this._arcadeTask?.value){for(const t of this.expressionsUsedInTitle??[])e.push({name:t.name,invalid:!0});return e}for(const t of this.expressionsUsedInTitle)try{const s=this._arcadeTask.value.arcade.parseScript(t.expression,["$layer","$map","$datastore"]);if(s.isAsync){e.push({name:t.name,invalid:!0});break}e.push({name:t.name,syntax:s,invalid:!1,func:this._arcadeTask.value.arcade.compileScript(s,{vars:{$feature:"any"}})})}catch{e.push({name:t.name,invalid:!0});break}return e}get expressionsUsedInTitle(){let e=this.effectivePopupTemplate?.title??"";return typeof e!="string"?[]:(e=e.toLowerCase(),this.effectivePopupTemplate?.expressionInfos?.filter((t=>e.includes(`{expression/${t.name.toLowerCase()}}`)))??[])}get fieldInfoMap(){return this._featureUtils?this._createFieldInfoMap(this._featureUtils.getAllFieldInfos(this.effectivePopupTemplate)):null}get hasBadExpressions(){return this.calculatedExpressions.some((e=>e.invalid===!0))}get requiredFields(){const e=new Set;if(this._arcadeTask?.value&&!this.hasBadExpressions)for(const s of this.calculatedExpressions?.toArray()??[])try{const i=this._arcadeTask.value.arcade.extractFieldLiterals(s.syntax);for(const o of i){const d=o.split("."),l=this.fieldsIndex.get(d.at(-1)??"");l&&e.add(l.name)}}catch{}const t=this._extractFieldNames(this.workingTitle);for(const s of t){const i=this.fieldsIndex.get(s);i&&e.add(i.name)}return this.objectIdField!=null&&e.add(this.objectIdField),e}get titleFromDisplayField(){let e="";return this.displayField&&(e=this.fieldsIndex.get(this.displayField)?.name??""),e||(e=this.fieldsIndex.get(this.objectIdField)?.name??""),e?`{${e}}`:""}get workingTitle(){const e=this.effectivePopupTemplate?this.effectivePopupTemplate.title:"";return e===""||e==null||this.hasBadExpressions||typeof e!="string"?this.titleFromDisplayField:e}async getTitle(e,t,s){const i=t.getObjectId()??t.attributes[e.objectIdField];return(await this.getTitles(e,[t],s)).get(i)??""}async getTitles(e,t,s){const i=new Map,o=s?.timeZone??"system";try{const[{substituteFieldsInLinksAndAttributes:d}]=await Promise.all([this.featureUtilsPromise,this._arcadeTask?.promise]);s?.fetchMissingFields&&(t=await this._checkAndReQueryGraphics(e,t));const{fieldInfoMap:l,workingTitle:u}=this,p=u&&l;t.forEach((c=>{const f=c.getObjectId()??c.attributes[e.objectIdField],h=p?d({attributes:c.attributes,expressionAttributes:null,fieldInfoMap:l,globalAttributes:this._createFormattedAttributes(e,c,o).global,layer:e,text:u}):"";i.set(f,h)}))}catch{}return i}async _checkAndReQueryGraphics(e,t){const s=t.map((i=>i.getObjectId()??i.attributes[e.objectIdField])).filter(x);if(s.length!==t.length)return t;if(t.some((i=>!T(i,this.requiredFields)))){const i=e.createQuery();i.where="1=1",i.outFields=[...this.requiredFields],i.objectIds=s;const o=await e.queryFeatures(i);if(o?.features.length===t.length)return o.features}return t}_createFieldInfoMap(e){const t=new Map;if(!e)return t;for(const s of e){if(!s.fieldName)continue;const i=this.fieldsIndex.get(s.fieldName),o=i?.name??s.fieldName;s.fieldName=o,t.set(o.toLowerCase(),s)}return t}_createFormattedAttributes(e,t,s="system"){const i=this.effectivePopupTemplate?.fieldInfos??[],o={};if(!this._featureUtils)return{};if(!this.hasBadExpressions&&this.calculatedExpressions.length>0&&this._arcadeTask?.value){const l=this._arcadeTask.value.Feature.createFromGraphicLikeObject(t.geometry,t.attributes,e,null);for(const u of this.calculatedExpressions)try{o[`expression/${u.name}`]=u.func({vars:{$feature:l}})}catch{}}const d={...t.attributes,...o};return{global:this._featureUtils.formatAttributes({fieldInfos:i,attributes:d,graphic:t,timeZone:s,layer:e,fieldInfoMap:this.fieldInfoMap}),content:[]}}_extractFieldNames(e){return F(e).filter((t=>!(t.indexOf(v)===0||t.indexOf(k)===0)))}};a([n({readOnly:!0})],r.prototype,"_arcadeTask",null),a([n()],r.prototype,"_featureUtils",void 0),a([n({readOnly:!0})],r.prototype,"featureUtilsPromise",null),a([n({readOnly:!0})],r.prototype,"calculatedExpressions",null),a([n()],r.prototype,"displayField",void 0),a([n()],r.prototype,"effectivePopupTemplate",void 0),a([n()],r.prototype,"expressionsUsedInTitle",null),a([n()],r.prototype,"fieldsIndex",void 0),a([n()],r.prototype,"fieldInfoMap",null),a([n()],r.prototype,"fields",void 0),a([n()],r.prototype,"objectIdField",void 0),a([n()],r.prototype,"requiredFields",null),r=a([g("esri.layers.support.TitleCreator")],r);export{r as u};
