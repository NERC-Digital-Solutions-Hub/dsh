import{s as l}from"./Rwg6dtTd.js";import{$ as i}from"./CUIWi6G4.js";async function m(r){const t=[];for(const n of r.allLayers)if("beforeSave"in n&&typeof n.beforeSave=="function"){const e=n.beforeSave();e&&t.push(e)}await Promise.allSettled(t)}const u=new Set(["layer:unsupported","property:unsupported","symbol:unsupported","symbol-layer:unsupported","url:unsupported"]);function c(r,t,n){let e=(r.messages??[]).filter((({type:o})=>o==="error")).map((({name:o,message:a,details:p})=>new l(o,a,p)));if(r.blockedRelativeUrls&&(e=e.concat(r.blockedRelativeUrls.map((o=>new l("url:unsupported",`Relative url '${o}' is not supported`))))),n){const{ignoreUnsupported:o,supplementalUnsupportedErrors:a=[],requiredPropertyChecksDisabled:p}=n;o&&(e=e.filter((({name:s})=>!(u.has(s)||a.includes(s))))),p&&(e=e.filter((s=>s.name!=="web-document-write:property-required")))}if(e.length>0)throw new l(t.errorName,"Failed to save due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:e})}function y(r){return i(r).some((t=>!!t.charts?.length))}export{y as n,m as o,c as s};
