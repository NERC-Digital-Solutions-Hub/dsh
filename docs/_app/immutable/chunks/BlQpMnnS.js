import{l as N,o as $,a as t,m as o,C as O,b as u,B as j,bL as V}from"./DX5R6uCF.js";import{l as b}from"./CqeMUCLQ.js";import{a as g}from"./C6k8CR_f.js";import"./K0pwTKFC.js";import{r as f}from"./BbbhU7iP.js";import{o as c}from"./aQeO9QTD.js";const z=new $({esriSMS:"simple-marker",esriPMS:"picture-marker",esriSLS:"simple-line",esriSFS:"simple-fill",esriPFS:"picture-fill",esriTS:"text",esriSHD:"shield-label-symbol",PointSymbol3D:"point-3d",LineSymbol3D:"line-3d",PolygonSymbol3D:"polygon-3d",WebStyleSymbol:"web-style",MeshSymbol3D:"mesh-3d",LabelSymbol3D:"label-3d",CIMSymbolReference:"cim"});let P=0,y=class extends N{constructor(r){super(r),this.id="sym"+P++,this.type=null,this.color=new b([0,0,0,1])}readColor(r){return r?.[0]!=null?[r[0],r[1],r[2],r[3]/255]:r}async collectRequiredFields(r,s){}hash(){return JSON.stringify(this.toJSON())}clone(){}};t([o({type:z.apiValues,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,writer:z.write,isRequired:!0}}})],y.prototype,"type",void 0),t([o({type:b,json:{write:{allowNull:!0}}})],y.prototype,"color",void 0),t([O("color")],y.prototype,"readColor",null),y=t([u("esri.symbols.Symbol")],y);const I=["begin","end","begin-end"],q=["arrow","circle","square","diamond","cross","x"];let S=class extends y{constructor(r){super(r),this.type="simple-line",this.width=.75}hash(){return`${this.type}.${this.width}`}};t([f({esriSLS:"simple-line"},{readOnly:!0})],S.prototype,"type",void 0),t([o({type:Number,cast:c,json:{write:!0}})],S.prototype,"width",void 0),S=t([u("esri.symbols.LineSymbol")],S);var k;let n=k=class extends N{constructor(e){super(e),this.placement="begin-end",this.type="line-marker",this.style="arrow"}writeStyle(e,r,s,i){r[s]=i?.origin==="web-map"?"arrow":e}set color(e){this._set("color",e)}readColor(e){return e?.[0]!=null?[e[0],e[1],e[2],e[3]/255]:e}writeColor(e,r,s,i){i?.origin==="web-map"||(r[s]=e)}clone(){return new k({color:g(this.color),placement:this.placement,style:this.style})}hash(){return`${this.placement}.${this.color?.hash()}.${this.style}`}};t([o({type:["begin","end","begin-end"],json:{write:!0}})],n.prototype,"placement",void 0),t([f({"line-marker":"line-marker"},{readOnly:!0}),o({json:{origins:{"web-map":{write:!1}}}})],n.prototype,"type",void 0),t([o({type:q})],n.prototype,"style",void 0),t([j("style")],n.prototype,"writeStyle",null),t([o({type:b,value:null,json:{write:{allowNull:!0}}})],n.prototype,"color",null),t([O("color")],n.prototype,"readColor",null),t([j("color")],n.prototype,"writeColor",null),n=k=t([u("esri.symbols.LineSymbolMarker")],n);const A=n;var x;const v=new $({esriSLSSolid:"solid",esriSLSDash:"dash",esriSLSDot:"dot",esriSLSDashDot:"dash-dot",esriSLSDashDotDot:"long-dash-dot-dot",esriSLSNull:"none",esriSLSShortDash:"short-dash",esriSLSShortDot:"short-dot",esriSLSShortDashDot:"short-dash-dot",esriSLSShortDashDotDot:"short-dash-dot-dot",esriSLSLongDash:"long-dash",esriSLSLongDashDot:"long-dash-dot"});let l=x=class extends S{constructor(...e){super(...e),this.type="simple-line",this.style="solid",this.cap="round",this.join="round",this.marker=null,this.miterLimit=2}normalizeCtorArgs(e,r,s,i,p,F){if(e&&typeof e!="string")return e;const d={};return e!=null&&(d.style=e),r!=null&&(d.color=r),s!=null&&(d.width=c(s)),i!=null&&(d.cap=i),p!=null&&(d.join=p),F!=null&&(d.miterLimit=c(F)),d}clone(){return new x({color:g(this.color),style:this.style,width:this.width,cap:this.cap,join:this.join,miterLimit:this.miterLimit,marker:this.marker?.clone()})}hash(){return`${super.hash()}.${this.color?.hash()}.${this.style}.${this.cap}.${this.join}.${this.miterLimit}.${this.marker?.hash()}`}};t([f({esriSLS:"simple-line"},{readOnly:!0})],l.prototype,"type",void 0),t([o({type:v.apiValues,json:{read:v.read,write:v.write}})],l.prototype,"style",void 0),t([o({type:["butt","round","square"],json:{write:{overridePolicy:(e,r,s)=>({enabled:e!=="round"&&s?.origin==null})}}})],l.prototype,"cap",void 0),t([o({type:["miter","round","bevel"],json:{write:{overridePolicy:(e,r,s)=>({enabled:e!=="round"&&s?.origin==null})}}})],l.prototype,"join",void 0),t([o({types:{key:"type",base:null,defaultKeyValue:"line-marker",typeMap:{"line-marker":A}},json:{write:!0,origins:{"web-scene":{write:!1}}}})],l.prototype,"marker",void 0),t([o({type:Number,json:{read:!1,write:!1}})],l.prototype,"miterLimit",void 0),l=x=t([u("esri.symbols.SimpleLineSymbol")],l);let w=class extends y{constructor(e){super(e),this.outline=null,this.type=null}hash(){return`${this.type}.${this.outline?.hash()}`}};t([o({types:{key:"type",base:null,defaultKeyValue:"simple-line",typeMap:{"simple-line":l}},json:{default:null,write:!0}})],w.prototype,"outline",void 0),t([o({type:["simple-fill","picture-fill"],readOnly:!0})],w.prototype,"type",void 0),w=t([u("esri.symbols.FillSymbol")],w);let h=class extends y{constructor(e){super(e),this.angle=0,this.type=null,this.xoffset=0,this.yoffset=0,this.size=9}hash(){return`${this.type}.${this.angle}.${this.size}.${this.xoffset}.${this.yoffset}`}};t([o({type:Number,json:{read:e=>e&&-1*e,write:(e,r)=>r.angle=e&&-1*e}})],h.prototype,"angle",void 0),t([o({type:["simple-marker","picture-marker"],readOnly:!0})],h.prototype,"type",void 0),t([o({type:Number,cast:c,json:{write:!0}})],h.prototype,"xoffset",void 0),t([o({type:Number,cast:c,json:{write:!0}})],h.prototype,"yoffset",void 0),t([o({cast:e=>e==="auto"?e:V(c(e)),json:{write:!0}})],h.prototype,"size",void 0),h=t([u("esri.symbols.MarkerSymbol")],h);var M;const L=new $({esriSFSSolid:"solid",esriSFSNull:"none",esriSFSHorizontal:"horizontal",esriSFSVertical:"vertical",esriSFSForwardDiagonal:"forward-diagonal",esriSFSBackwardDiagonal:"backward-diagonal",esriSFSCross:"cross",esriSFSDiagonalCross:"diagonal-cross"});let m=M=class extends w{constructor(...e){super(...e),this.color=new b([0,0,0,.25]),this.outline=new l,this.type="simple-fill",this.style="solid"}normalizeCtorArgs(e,r,s){if(e&&typeof e!="string")return e;const i={};return e&&(i.style=e),r&&(i.outline=r),s&&(i.color=s),i}clone(){return new M({color:g(this.color),outline:this.outline&&this.outline.clone(),style:this.style})}hash(){return`${super.hash()}${this.style}.${this.color&&this.color.hash()}`}};t([o()],m.prototype,"color",void 0),t([o()],m.prototype,"outline",void 0),t([f({esriSFS:"simple-fill"},{readOnly:!0})],m.prototype,"type",void 0),t([o({type:L.apiValues,json:{read:L.read,write:L.write}})],m.prototype,"style",void 0),m=M=t([u("esri.symbols.SimpleFillSymbol")],m);var C;const D=new $({esriSMSCircle:"circle",esriSMSSquare:"square",esriSMSCross:"cross",esriSMSX:"x",esriSMSDiamond:"diamond",esriSMSTriangle:"triangle",esriSMSPath:"path"});let a=C=class extends h{constructor(...e){super(...e),this.color=new b([255,255,255,.25]),this.type="simple-marker",this.size=12,this.style="circle",this.outline=new l}normalizeCtorArgs(e,r,s,i){if(e&&typeof e!="string")return e;const p={};return e&&(p.style=e),r!=null&&(p.size=c(r)),s&&(p.outline=s),i&&(p.color=i),p}writeColor(e,r){e&&this.style!=="x"&&this.style!=="cross"&&(r.color=e.toJSON()),e===null&&(r.color=null)}set path(e){this.style="path",this._set("path",e)}clone(){return new C({angle:this.angle,color:g(this.color),outline:this.outline&&this.outline.clone(),path:this.path,size:this.size,style:this.style,xoffset:this.xoffset,yoffset:this.yoffset})}hash(){return`${super.hash()}.${this.color&&this.color.hash()}.${this.path}.${this.style}.${this.outline?.hash()}`}};t([o()],a.prototype,"color",void 0),t([j("color")],a.prototype,"writeColor",null),t([f({esriSMS:"simple-marker"},{readOnly:!0})],a.prototype,"type",void 0),t([o()],a.prototype,"size",void 0),t([o({type:D.apiValues,json:{read:D.read,write:D.write}})],a.prototype,"style",void 0),t([o({type:String,json:{write:!0}})],a.prototype,"path",null),t([o({types:{key:"type",base:null,defaultKeyValue:"simple-line",typeMap:{"simple-line":l}},json:{default:null,write:!0}})],a.prototype,"outline",void 0),a=C=t([u("esri.symbols.SimpleMarkerSymbol")],a);export{m as a,y as c,I as e,h as i,w as l,l as m,q as n,a as u};
