import{e as u,b as n,D as w,r as c,m as f,a as y}from"./iFuBOtDF.js";import{i as I}from"./BfhsIlKo.js";import"./DHq0rblm.js";import{s as T}from"./pCx8oau_.js";import{c as V}from"./Ck-szKz5.js";import"./C3el2dU7.js";import"./BS3H3l-F.js";import"./DCdj6Lab.js";import"./BRxoU36Y.js";import"./BOB_xkBk.js";import"./CASyCajO.js";import"./BU3f_W-T.js";import"./D6KPPgz5.js";import"./B-VZ3wrL.js";import"./MpQCTsu7.js";import{h as H,p as v,r as C}from"./DsnVlOka.js";import"./DoDP5r3i.js";import"./CWeOj5sv.js";import"./De36bUhR.js";import"./C8PpcA25.js";import"./Bim_AzCO.js";import"./BiphejqT.js";import"./Cf9zLCCH.js";import"./CpZyt50d.js";import{c as q}from"./D5ew8ajr.js";import"./Caw2WRyS.js";import"./BwsikM5h.js";import"./D5kyIyJa.js";import"./BgvLO-3W.js";import"./DnFXzNOs.js";import"./pk2C5RYg.js";import"./CRICuw0r.js";import"./XvJB-sLc.js";import"./gRIb6kZn.js";import"./C59-Ldxf.js";import"./BFLErLYb.js";import"./BDqMdsvZ.js";import"./Bs354Zoz.js";import"./DhdgDebw.js";import"./CNJBC4J4.js";import"./Dytf6RTV.js";import"./8YOoqft9.js";import"./Cj7KC756.js";import"./7uYvE-y6.js";import{O as U}from"./DurgqEXf.js";import"./D9gy186-.js";import"./WCVSSNPR.js";import"./BdLvjJaM.js";import"./DgwIrkEl.js";import"./Cr2KJ5IK.js";import"./DYJGs4je.js";import{r as b,o as p,n as d}from"./lxCaEmmO.js";import{S as P,u as Q}from"./C9YCpued.js";import{a as S}from"./iZW8ARJi.js";import{e as _}from"./CrwPCMe2.js";import{i as G}from"./CkYkPWKV.js";import{_ as L,P as k,i as F}from"./BuPCn9R0.js";import{r as z}from"./D6zHs6ux.js";import{g as E}from"./B9RJBcJ2.js";const W=[0,0];let l=class extends G(b(P(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),L(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(h,r)=>z(h,r,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:r})=>e.graphicUpdateHandler({graphic:h,property:r}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add((()=>this.resampling),(()=>{this.doRefresh()}))),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=F(t);if(e.length===0)return u();const h=i?.name??q;return this._addHighlightGraphics(e,h),u((()=>!this.destroyed&&this._removeHighlightGraphics(e,h)))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map((e=>e.uid)),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map((e=>e.uid)),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return T(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t))))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",(()=>t.destroy())),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(r){if(n(r))throw r;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const s=this._tileInfoView.getTileParentId(t.id);if(s){const a=new _(s),o=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return d(this._tileInfoView,o,a,t)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:r=0}=i,s=new _(0,0,0,0);let a,o=null;try{if(o=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:h}),!this.resampling&&s.level!==t.level)return await w(i),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(s,h)}catch(m){if(n(m))throw m;if(this.resampling&&o==="unknown"&&r<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){s.set(g);try{a=await this._fetchTileWithTilemapCache(s,{...i,resamplingLevel:r+1})}catch{}}}}return a?this.resampling?d(this._tileInfoView,a,s,t):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",(()=>this.requestUpdate()))}catch(i){n(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([f()],l.prototype,"resampling",null),c([f()],l.prototype,"tilemapCache",null),l=c([y("esri.views.2d.layers.TileLayerView2D")],l);const Dt=l;export{Dt as default};
